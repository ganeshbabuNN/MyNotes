introduction 
Delecration of variables
Assigning values to variable
Rules and Naming Convention for Variables
Variable Scope ?
Literals
 numeric literals
 string literals
 	escape characters


Introduction
============
-Variable is a name which is used to refer memory location
-Variable also known as identifier and used to hold value
-In Python, we don't need to specify the type of variable because Python is a type infer language and smart enough to get variable type.
-It is recomended to use lowercase letters for variable name

Delecration of variables
========================
-Python does not bound us to declare variable before using in the application
-It allows us to create variable at required time
-We don't need to declare explicitly variable in Python

ex
a=10
b=20

Assigning values to variable
=============================
-When we assign any value to the variable that variable is declared automatically
-The equal (=) operator is used to assign value to a variable

a=10 
print(a)

a=10.88
print(a)

b=False
print(b)

c='ravi'
print(c)

Multiple Assignment
-------------------
-Python allows us to assign a value to multiple variables in a single statement which is also known as multiple assignment.

1. Assigning single value to multiple variables
x=y=z=5
print(x)
print(y)
print(z)

2.Assigning multiple values to multiple variables:
The values will be assigned in the order in which variables appears.

a,b,c = 3,4,5
print(a)
print(b)
print(c)

Rules and Naming Convention for Variables
=========================================
1)variable names should have a combination of letters in lowercase (a to z) or uppercase (A to Z) or digits (0 to 9) or an underscore (_). For example:
	snake_case
	MACRO_CASE
	camelCase
	CapWords
2)Create a name that makes sense and must not be a keyword
3)If you want to create a variable name having two words, use underscore to separate them. For example
	my_name
	current_salary
4)Use capital letters possible to declare a constant. For example:
	PI
	G
	MASS
	SPEED_OF_LIGHT
5)Never use special symbols like !, @, #, $, %, etc.
6)Don't start a variable name with a digit.

Variable Scope
==============
https://techvidvan.com/tutorials/python-variable-scope/

Literals
=========
-Literal is a raw data given in a variable or constant. In Python, there are various types of literals they are as follows:
-In Python, there are various types of literals they are as follows:
1)Numeric Literals(integer,float,complext type)
2)String literals
3)Boolean literials
4)Special literals(None)
5)Collection literals(lists,tuple,dictionary,set)

1)Numeric Literals
------------------
-Numeric Literals are immutable (unchangeable).
-Numeric literals can belong to 3 different numerical types: Integer, Float, and Complex.

a = 0b1010 #Binary Literals
b = 100 #Decimal Literal 
c = 0o310 #Octal Literal
d = 0x12c #Hexadecimal Literal

#Float Literal
float_1 = 10.5 
float_2 = 1.5e2 #1.5e2 is expressed with exponential and is equivalent to 1.5 * 102.

#Complex Literal 
x = 3.14j

print(a, b, c, d)
print(float_1, float_2)
print(x)
print(x.imag) #we use imaginary literal (x.imag)
print(x.real) #real literal (x.real) to create imaginary and real parts of complex numbers

2)String literals
-----------------
-A string literal is a sequence of characters surrounded by quotes
-We can use both single, double, or triple quotes for a string

strings = "This is Python" #is a string literal
char = "C" #is a character literal
multiline_str = """This is a multiline string with 
more 
than one 
line code."""

unicode = u"\u00dcnic\u00f6de" #is a Unicode literal which supports characters other than English.
#in this case, \u00dc represents ร and \u00f6 represents รถ

raw_str = r"raw \n string" #raw string literal

print(strings)
print(char)
print(multiline_str)
print(unicode)
print(raw_str)

Python Escape Characters
*----------------------*
-To insert characters that are illegal in a string, use an escape character.
-An escape character is a backslash \ followed by the character you want to insert.

Ex:
print("we are so called "Dravidian" from south.")
#use the \(black slash) to fix the above 
print("we are so called \"Dravidian\" from south.")

Other escape characters used
\'-Single Quote	
\\ -Black slash
\n - New Line
\r - Carriage Return
\t - Tab
\b - Backspace
\f -Form Feed	
\ooo -Octal value	
\xhh -hexal value

3)Boolean literials
-------------------
-A Boolean literal can have any of the two values: True or False.
-This can be even given as 1 or 0

x=False
y=True
x = (1 == True) #In Python, True represents the value as 1 and False as 0
y = (1 == False)
a = True + 4
b = False + 10

print(x)
print(y)
print("x is", x)
print("y is", y)
print("a:", a)
print("b:", b)

4)Special literals
------------------
-Python contains one special literal i.e. None. We use it to specify that the field has not been created.

ex: ordering a drink or a food
drink ="available"
food = None

def menu(x):
    if x ==drink:
        print(drink)
    else:
        print(food)
    
menu(drink)
menu(food)

5)Collection literals(
----------------------
-there are four types of lists,tuple,dictionary,set)

fruits=["apple","mango","orange","banana"] #list
number = (1,2,3) #tuple
student={'1':'ganesh','2':'vedha' ,'3':'kal'} #dictionary having key and values
vowels ={'a','e','i','o','u','u'} #sets

print(fruits)
print(number)
print(student)
print(vowels)