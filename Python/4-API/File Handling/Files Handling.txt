Files
Write String to a file
Read from a file
Write multiple strings
Check if the file exists
Pickle
Unpickle

Files
=====
If you want to write the data into a file, you use file handling.

syntax
file object = open(<file-name>, <access-mode>, <buffering>)  

access-mode
r -It opens the file to read-only. The file pointer exists at the beginning.
rb -It opens the file to read only in binary format. The file pointer exists at the beginning of the file.
r+ -It opens the file to read and write both. The file pointer exists at the beginning of the file.
rb+ -It opens the file to read and write both in binary format. The file pointer exists at the beginning of the file.
w - It opens the file to write only. It overwrites the file if previously exists or creates a new one if no file exists with the same name. The file pointer exists at the beginning of the file.
wb - It opens the file to write only in binary format. It overwrites the file if it exists previously or creates a new one if no file exists with the same name. The file pointer exists at the beginning of the file.
w+ - It opens the file to write and read both. It is different from r+ in the sense that it overwrites the previous file if one exists whereas r+ doesn't overwrite the previously written file. It creates a new file if no file exists. The file pointer exists at the beginning of the file.
wb+	- It opens the file to write and read both in binary format. The file pointer exists at the beginning of the file.
a - It opens the file in the append mode. The file pointer exists at the end of the previously written file if exists any. It creates a new file if no file exists with the same name.
ab - It opens the file in the append mode in binary format. The pointer exists at the end of the previously written file. It creates a new file in binary format if no file exists with the same name.
a+ - It opens a file to append and read both. The file pointer remains at the end of the file if a file exists. It creates a new file if no file exists with the same name.
ab+	- It opens a file to append and read both in binary format. The file pointer remains at the end of the file.


Write String to a file
=====================

f=open("mylog.txt","w")
f.write("Hello, gani how are you")
f.close()

Read from a file
================

f=open("mylog.txt","r")
c=f.read()
print(c)
f.close()

Write multiple strings
======================
f=open("newfile.txt","w")
print("Enter Text(Type # when your are done)")
s=""
while s!="#":
    s=input()
    f.write(s + "\n")
f.close()

Check if the file exists
========================
import os,sys

s="mylog.txt"
if os.path.isfile(s):
    print("file exists")
else:
    print("File does not exists")
    sys.exit

f=open(s,'r')
con=f.read()
print(con)

Pickle
=======
-Pickle is used for serializing and de-serializing Python object structures, also called marshalling or flattening. 
-Serialization refers to the process of converting an object in memory to a byte stream that can be stored on disk or sent over a network. Later on, this character stream can then be retrieved and de-serialized back to a Python object. 

class Student:
    def __init__(self,id,name,score):
        self.id=id
        self.name=name
        self.score=score
        
    def display(self):
        return print(self.id,self.name,self.score)


serialize the object
--------------------

import pickle,studentpick

f=open("student.bat","wb")
s=studentpick.Student(12,"ganesh",69)
pickle.dump(s,f)
f.close()


Unpickle
=========
-its usually de-serialize the object from the already serialized object

import pickle
f=open("student.bat","rb")
obj=pickle.load(f)
obj.display()
f.close()

Quiz:
=====

Assignment:
===========

Resources
=========