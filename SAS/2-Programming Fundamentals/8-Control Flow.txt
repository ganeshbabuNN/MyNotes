intro
type of control flow


Type of control statment
=======================
1)Decision making or branching
2)Looping statement

looping
=======
-In general, statements are executed sequentially  − The first statement in a function is executed first, followed by the second, and so on.
But when you want the same set of statements to be executed again and again, we need the help of Loops

Type of loops
-------------
1)Do index - The loop continues from the start value till the stop value of the index variable.
2)Do While - The loop continues till the while condition becomes false.
3)DO UNTIL - The loop continues till the UNTIL condition becomes True.

https://online.stat.psu.edu/stat481/lesson/18

1)do Index
----------
-This DO Index loop uses a index variable for its start and end value. The SAS statements are repeatedly executed until the final value of the index variable is reached.

Syntax
DO index-variable = start TO stop BY increment;
        action statements;
END;

Example:
-printing from 1 to 10;
data _null_; 
do i=1 to 7;
	put i;
	output;
end;
run;

data do_loop; 
do var=1 to 5;
	loopdemo=var;
	output;
end;
run;

-cummulative sum
data do_loop; 
sum =0;
do var=1 to 5;
	sum=sum+var; 
end;
run;

-cummulative sum for each row
data do_loop; 
sum =0;
	do var=1 to 5;
		sum=sum+var; 
		output;
	end;
run;

-printing a tables;
data _null_;
	a=2;
	do i=1 to 10;
		b = a * i;
		put a "*" i "=" b;	
	end;
run;

-Nested loop
DATA _null_;
DO i = 1 to 4;
    DO j = 1 to 5;
	   put i j;
        output;
            END;
    END;
RUN; 

*Iteratively Processing Data
data test;
input num1 num2;
drop i;
do i=1 to num1;
	ganesh=num2+2;
end;
cards;
1 42
2 32
3 11
4 14
5 14
6 65
7 87
;
run;

2)do While
----------
This DO WHILE loop uses a WHILE condition. The SAS statements are repeatedly executed until the while condition becomes false.

syntax:
DO WHILE (variable  condition);
. . . SAS statements . . . ;
END;

*printing from 1 to 10;
data temp1;
var =1;
do while(var <6);
	sum=var;
	var+1;
	output;
end;
run;

*cummulative sum
data temp1;
var =1;
sum=0;
do while(var <6);
	sum=sum+var;
	var+1; 
end;
run;

*cummulative sum for each row
data temp1;
var =1;
sum=0;
do while(var <6);
	sum=sum+var;
	var+1;
	output;
end;
run;

3)DO UNTIL
----------
The DO UNTIL loop uses a UNTIL condition. The SAS statements are repeatedly executed till the UNTIL condition becomes TRUE

Syntax
DO UNTIl (variable  condition);
. . . SAS statements . . . ;
END;

*printing from 1 to 10;
data temp1;
var=1;
sum=0;
do until(var >6);
	sum=sum+var;
	var+1;
	output;
end;
run;

*cummulative sum
data temp1;
var=1;
sum=0;
do until(var >6);
	sum=sum+var;
	var+1; 
end;
run;

*cummulative sum for each row
data temp1;
var=1;
sum=0;
do until(var >6);
	sum=sum+var;
	var+1; 
	output;
end;
run;

Decision making or branching
============================
Decision making structures require the programmer to specify one or more conditions to be evaluated or tested by the program, 
along with a statement or statements to be executed if the condition is determined to be true, and optionally, 
other statements to be executed if the condition is determined to be false.

types of branching
------------------
1)IF statement
2)IF-THEN-ELSE statement
3)IF-THEN-ELSE-IF statement
4)IF-THEN-DELETE statement

1)IF statement
*-------------*
An IF statement consists of a boolean expression followed by SAS statements.

Syntax
The basic syntax for creating an if statement in SAS is −
IF (condition );

example:
data temp;
set employees;
if bonus > 40000;
run;

2)IF-THEN-ELSE statement
*----------------------*
An IF-THEN-ELSEstatement consists of a boolean expression with a THEN statements.This ia again followed by an ELSE Statement.

Syntax
The basic syntax for creating an if statement in SAS is −
IF (condition ) THEN result1;
ELSE result2;
-If the condition evaluates to be true, then the respective observation is processed.

Example:
data temp;
set employees;
if bonus > 40000 then BONUSRANGE ='HIGH';
ELSE BONUSRANGE='LOW';
run;

3)IF-THEN-ELSE-IF statement
*-------------------------*
An IF-THEN-ELSE-IF statement consists of a boolean expression with a THEN statements. This ia again followed by an ELSE Statement

Syntax
The basic syntax for creating an if statement in SAS is −
IF (condition1) THEN result1;
ELSE IF (condition2) THEN result2;
ELSE IF (condition3) THEN result3;

Example:
data temp;
set employees;
if sal <= 35000 then SALRANGE ='LOW';
ELSE IF 35000 < sal < 45000 THEN SALRANGE='MEDIUM';
ELSE IF sal >= 45000 THEN SALRANGE='HIGH';
run;

4)IF-THEN-DELETE statement
*------------------------*
An IF-THEN-DELETE statement consists of a boolean expression followed by SAS THEN DELETE statement.

Syntax
The basic syntax for creating an if statement in SAS is.
IF (condition ) THEN DELETE;
If the condition evaluates to be true, then the respective observation is processed

Example
data temp;
set employees;
if sal <= 35000 then DELETE; 
run;