Data types
Type of Datatypes
controlling the input and output values
Strings

Data types
==========
the type of value which is stored in a variable or hold portion of a memory.

Type of Datatypes
==================
In SAS has three types of variables as below âˆ’
1)Numeric Variables
2)Character Variables
3)Date Variables

1)Numeric Variables
-------------------
This is the default variable type. These variables are used in mathematical expressions.
the INPUT statement shows the declaration of numeric variables

Syntax: 
INPUT VAR1 VAR2 VAR3; 		#Define numeric variables in the data set.

Example:
INPUT ID SALARY COMM_PERCENT;

2)Character Variables
----------------------
-They are treated as text or strings. 
-A variable becomes a character variable by adding a $ sing with a space at the end of the variable name
-the INPUT statement shows the declaration of character variables

Syntax
INPUT VAR1 $ VAR2 $ VAR3 $; 	#Define character variables in the data set.

Example
INPUT FNAME $ LNAME $ ADDRESS $;

Date Variables
--------------
These variables are treated only as dates and they need to be in valid date formats.

Syntax
INPUT VAR1 DATE11. VAR2 MMDDYY10. ; #Define date variables in the data set.
In the above syntax, the INPUT statement shows the declaration of date variables.

Example
INPUT DOB DATE11. START_DATE MMDDYY10. ;

https://documentation.sas.com/?docsetId=leforinforref&docsetTarget=p1wj0wt2ebe2a0n1lv4lem9hdc0v.htm&docsetVersion=9.4&locale=en

controlling the input and output values
=======================================
Generally in SAS, output values are controlling using SAS formats and inputs values by informats;

informats
---------
An informat is a type of SAS language element that applies a pattern to or executes instructions for a data value to be read as input.

syntax:
input var1 var ;

example:
input @15 style $3. @21 price 5.2

some formats are:
inFormat-Use
n. -Maximum "n" number of columns with no decimal point.
n.p -Maximum "n" number of columns with "p" decimal points.
COMMAn.p- Maximum "n" number of columns with "p" decimal places which removes any comma or dollar signs.

Numeric formats
(32332,32332,3213.21,323.32)=BESTw.
(32.2,3821.23,9494.23)=(4.1,7.2,10.2)

String 

date informats:
(12032011,12-03-2011,12/03/11)-(mmddyy8.,mmddyy10.,mmddyy8.)
(14032011,14-03-2011,14/03/11)-(ddmmyy8.,ddmmyy10.,ddmmyy8.)
(14mar2011,14-mar-2011,14/mar/11)-(date9.,date11.,date9.)
14-mar-2011	-anydtdte15.

Ways to apply the INformats
*-----------------------*

1)using input function
-The INPUT function converts a SAS character expression using a specified informat.

for numeric :
data _null_;
var1='918.613';
var2=input(var1,2.);
var21=input(var1,2.1);
var3=input(var1,3.);
var31=input(var1,3.1);
var32=input(var1,3.2);
var4=input(var1,4.1);
var41=input(var1,4.3);
var42=input(var1,5.);
var5=input(var1,5.1);
var51=input(var1,5.2);
var6=input(var1,6.1);
var7=input(var1,6.2);
var8=input(var1,6.3);
var9=input(var1,7.);
var10=input(var1,7.1);
var11=input(var1,8.);
var12=input(var1,8.1);
put var2;
put var21;
put var3;
put var31;
put var32;
put var4;
put var41;
put var42;
put var5;
put var51;
put var6;
put var7;
put var8;
put var9;
put var10;
put var11;
put var12;
run;

for string:
we shall use the functions 

data _null_;
var1='ganesh';
var2='babu';
var3 = cat(var1,var2);
put var3; 
run;

for dates:
for dates:
data _null_;
var1='03-mar-2019';
var11='03mar2019';
var12='03mar19';
var13='03-04-2019';
/*var131='03/04/2019';*/
var14='03042019';
var15='030419';
var16='03-04-2019';
var18='03042019';
var19='030419';
var20='mar 4 2020';
var3=input(var1,date11.);
var31=input(var11,date9.);
var32=input(var12,date7.);
/*var322=input(var12,date6.);*/
var33=input(var13,ddmmyy10.);
/*var331=input(var131,ddmmyy10.);*/
var34=input(var14,ddmmyy8.);
var35=input(var15,ddmmyy6.);
var36=input(var16,mmddyy10.);
var37=input(var18,mmddyy8.);
var38=input(var19,mmddyy6.);
var39=input(var20,anydtdte20.);
put var3 worddate20.; 
put var31 worddate20.; 
put var32 worddate20.;
put var322 worddate20.; 
put var33 worddate20.; 
put var331 worddate20.;
put var34 worddate20.;
put var35 worddate20.;
put var36 worddate20.;
put var37 worddate20.;
put var38 worddate20.;
put var39 worddate20.;
run;

2)  USING INPUT STATMENT

for numeric:
data staff;
	input x 6.;  ; /*maxiiuum width of the data*/ 
datalines; 
	datalines;
	7383
	4332.921
	43.2
	453.23
	23.209
	.32
	;
run;

for String informats:
data staffname;
input name $1-4;
cards;
ganeshbabu
giriredddy
manjunathswami
karthik
gani
;
run;

for date example:
data staffdate;
input @1 date1 date9. @11 date2 ddmmyy10. @22 date3 ddmmyy6. @29 date4 date11. @41 date5 ANYDTDTE12.; 
format date1 date11. date2 mmddyy9. date3 worddate20. date4 ddmmyy10. date5 date5.;
datalines;
12mar2019 12-03-2020 031220 14/mar/2020 june 13 1983
12mar2020 03-03-2020 031222 14-jun-2020 july 13 1983
;
run;

observer this way with @
data staffdate;
input date1 date12. date2 ddmmyy11. date3 mmddyy8.;
cards;
12mar2020 12-03-2019 03/20/20
12-mar-2013 12/03/2019 03-20-20
;
run;
 
3)using the informat statement;
-The INFORMAT statement associates an informat with a variable.

data staffdate;
input @1 date1 @11 date2 @22 date3 @29 date4 @41 date5 ; 
informat date1 date9. date2 ddmmyy10. date3 ddmmyy6. date4 date11. date5 ANYDTDTE13.; ;
datalines;
12mar2019 12-03-2020 031220 14/mar/2020 june 13 1983
12mar2020 03-03-2020 031222 14-jun-2020 july 13 1983
;
run;

4)Using attrib statement
it is associated with the informat statement

data staffdate;
input @1 date1 date9. @11 date2 ddmmyy10. @22 date3 ddmmyy6. @29 date4 date11. @41 date5 ANYDTDTE12.; 
attrib date1-date5 format=date11.;
datalines;
12mar2019 12-03-2020 031220 14/mar/2020 june 13 1983
12mar2020 03-03-2020 031222 14-jun-2020 july 13 1983
;
run;


User-Defined Informats
*--------------------*

https://documentation.sas.com/?docsetId=leforinforref&docsetTarget=titlepage.htm&docsetVersion=9.4&locale=en

formats
-------
A format is a type of SAS language element that applies a pattern to or executes instructions for a data value to be displayed or written as output

Syntax:
$Varname Formatnamew.d

$- indicate character
w is the maximum number of data columns (including digits after decimal & the decimal point itself) allowed to be stored for the variable.
d-d is the number of digits to the right of the decima

some formats are:
Format-Use
n. -Maximum "n" number of columns with no decimal point.
n.p -Maximum "n" number of columns with "p" decimal points.
COMMAn.p- Maximum "n" number of columns with "p" decimal places which removes any comma or dollar signs.

date formats:
input date - informat
03/11/2014- mmddyy10.
03/11/14-mmddyy8.
December 11, 2012-worddate20.
14mar2011-date9.
14-mar-2011-date11.
14-mar-2011	-anydtdte15.

Ways to apply the formats
*-----------------------*
some of the comman ways.

1) using PUT Statement

for numeric:
data _null_;
	var1=1456.3; 
	var2 = 12.1232;
	put var1 6.; 
	put var1 8.; 
	put var1 8.2;   *for decimal informat, memory are not buffered but for width it is buffered;
	put var1 3.1;   *width itself buffered , its error , scientist  3EN, data compression, winzip, winrar ;
	put var2 5.1;
	put var2 5.4;
	put var1 dollar11.4;
run;

for date:
data _null_;
	var1='march 2 2010';
	var2=input(var1,ANYDTDTE12.);
	put var2 date10.;
	put var2 date11.;
	put var2 date9.;
	put var2 date8.;
	put var2 date7.;
	put var2 date6.;
    put var2 date5.;
    *put var2 date4.;
    put var2 mmddyy9.;
    put var2 ddmmyy10.;
    put var2 worddate20.;
run;

2)using format statements

for Numeric :
data _null_;
	var1='march 2 2010';
	var2=input(var1,ANYDTDTE12.);
	put var2 date10.;
	put var2 date11.;
	put var2 date9.;
	put var2 date8.;
	put var2 date7.;
	put var2 date6.;
    put var2 date5.;
    *put var2 date4.;
    put var2 mmddyy9.;
    put var2 ddmmyy10.;
    put var2 worddate20.;
run;

for date example:
data staffdate;
input @1 date1 date9. @11 date2 ddmmyy10. @22 date3 ddmmyy6. @29 date4 date11. @41 date5 ANYDTDTE12.; 
format date1 date11. date2 mmddyy9. date3 worddate20. date4 ddmmyy10. date5 date5.;
datalines;
12mar2019 12-03-2020 031220 14/mar/2020 june 13 1983
12mar2020 03-03-2020 031222 14-jun-2020 july 13 1983
;
run;

3)Using attrib statment.
data staffdate;
input @1 date1 date9. @11 date2 ddmmyy10. @22 date3 ddmmyy6. @29 date4 date11. @41 date5 ANYDTDTE12.; 
attrib date1-date5 format=date11.;
datalines;
12mar2019 12-03-2020 031220 14/mar/2020 june 13 1983
12mar2020 03-03-2020 031222 14-jun-2020 july 13 1983
;
run;

User-Defined Formats
*------------------*

https://documentation.sas.com/?docsetId=leforinforref&docsetTarget=p1wj0wt2ebe2a0n1lv4lem9hdc0v.htm&docsetVersion=9.4&locale=en
