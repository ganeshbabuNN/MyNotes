Intro
Scatter Plots
Quiz
assignment
Resources

Intro
=====
there are four main basic plots have been used so far
1)scatter plot :the scatterplot chart (or dot chart) is used to examine the relationship between two numeric variables
2)Line chart :a line chart is used to display data that change continously over time
3)Bar chart :a bar chart is used to compare values accross categories using vertical or horizontal bars
4)Histograms : a histogram visually represents the distribution of a random variable
5)piechart :A pie chart is a circular graphical view of data.
6)box plots: a boxplot is a standardized way to display,a variable distribution by using five summary indicators minimum, first quartile, median, third quartile, maximum

Scatter Plots
=============
-the scatterplot chart (or dot chart) is used to examine the relationship between two numeric variables
-suppose we have to study the relationship between advertising expenses and sales, on a sample of 30 companies
-we will simulate the data with normal distributions

adv <- rnorm(30, 400, 200)
sales <- rnorm(30, 4000, 1000)

build the chart with the plot() function
----------------------------------------
plot(sales~adv)

the default chart type in the plot() function is dot
----------------------------------------------------
so we didn't have to specify the type
however, we can specify it explicitely

plot(sales~adv, type = "p")

an alternative syntax for the plot function is
plot(adv, sales)

add a title to the chart
------------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses")

add labels to the axes
----------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands")

set limits to the axes values (if necessary)
--------------------------------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     xlim = c(200,600))

plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     ylim = c(3000,4000))

set the font type for the title
--------------------------------
like 1 - normal, 2 -bold (default), 3 - italic, 4 - bold italic 5 -symbol

plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 1)

set the font size for the title,for the axes labels and for the axes values (default is 1)
-------------------------------------------------------------------------------------------

plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 0.8,
     cex.lab = 0.8, cex.axis = .8)

add a subtitle
--------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 0.8,
     cex.lab = 0.8, cex.axis = 0.8,
     sub = "Data for 30 Companies")

set the font size for the subtitle
----------------------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 0.8,
     cex.lab = 0.8, cex.axis = 0.8,
     sub = "Data for 30 Companies", cex.sub = 0.7)

change the font type for the axes labels
----------------------------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 0.8,
     cex.lab = 0.8, cex.axis = 0.8,
     sub = "Data for 30 Companies", cex.sub = 0.7,
     font.lab = 3)

re-draw the plot
----------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 1, cex.main = 1,
     cex.lab = 1, cex.axis = 1)

change the dots color
---------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 1, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "red")

plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "darkblue")

Note:
-to see the available color names we can use 
-the colors() command
colors()

-to download a PDF file with the available colors go here
-http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
-we can also use a hex code to specify the dot color

plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 1, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "#004A33")

change the dots shape to a plus sign
------------------------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "red",
     pch = 3)

Note:
-you can find the available point shapes here
http://www.cookbook-r.com/Graphs/Shapes_and_line_types/

change the dots size
--------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "red",
     pch = 3, cex = 2)

come back to the default size
-----------------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "red",
     pch = 3)

to change the background color we must first
--------------------------------------------
use the par() function
-set the bg parameter to the desired color

par(bg = "yellow")

plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "red",
     pch = 3)

add a grid to the chart
-----------------------
-specify the number of grid lines on the x axis (nx) and on the y axis (ny) in the grid() function
col represent the lines color and lty the lines type (more on that later)

grid(nx=10, ny=10, col = "gray", lty = "solid")

come back to the white background
---------------------------------
par(bg="white")

plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "red",
     pch = 3)

ADDING A TREND LINE TO A SCATTERPLOT
------------------------------------
plot(sales~adv, main = "Sales vs. Advertising Expenses",
     xlab = "Advertising Expenses",
     ylab = "Sales in Thousands",
     font.main = 2, cex.main = 1,
     cex.lab = 1, cex.axis = 1,
     col = "darkred",
     pch = 1)


Note:
to add a trend line we must first fit the data using the lm() function (in other words, get the regression equation that shows
how sales depend on the advertising expenses)

fit <- lm(sales~adv)

apply the abline() function to the object fit
abline(fit)

PLOTTING A CLUSTERED SCATTERPLOT
--------------------------------
-suppose we have to study the relationshp between sales and
-advertising expenses on companies in three sectors: manufacturing, services and retail
-the sectors will be coded this way:
1 - manufacturing
2 - services
3 - retail

simulate the data again
adv <- rnorm(30, 400, 200)
sales <- rnorm(30, 4000, 1000)

create a factor that represents the sector
------------------------------------------
sector <- sample(1:3, 30, replace = TRUE)
sector2 <- factor(sector, levels = c(1, 2, 3), 
                  labels = c("Manufacturing", "Services", "Retail"))
sector2

draw the clustered dot chart
----------------------------
plot(sales~adv, col = sector2, pch = 16)
  
add a legend to the chart
-------------------------
in the legend() command we can specify:
the legend position (x and y)
the legend text content, with the legend parameter
the color and shape of the points (the same as in the chart) the text size

legend(x=850, y=4200, legend = levels(sector2), col = 1:3, 
       pch=16, cex=0.5)

we can also display a line in the legend by using the parameter lty instead of pch
plot(sales~adv, col = sector2, pch = 16)
legend(x=850, y=4200, legend = levels(sector2), col = 1:3, 
       lty = "solid", cex=0.5)

Quiz
====

Assignment
==========


Resources:
=========
https://www.journaldev.com/36083/plot-function-in-r