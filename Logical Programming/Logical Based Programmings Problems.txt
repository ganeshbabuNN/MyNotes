LBP1
~~~~~
problem statement:

Program to check whether the given number is even or odd number.

inputs ----------> a number from the user
output  ---------> even or odd or invalid
constraint ------> n>=0

LBP2
~~~~~
Problem:
Given an integer n, perform the following conditional actions,
if n is odd, print weird,
if n is even and in the inclusive range of 2 to 5, print Not Weird.
if n is even and in the inclusive range of 6 to 20, print Weird.
if n is even and greater than 20, print Not Weird.

input-----> a number from the user
contraint-> 1<=n<=100
output----> Weird or Not Weird

LBP3
~~~~
To check whether the given year is leap year or not.

input------> year from the user
constraint-> no constraint
output-----> leap year or not leap year

hint: for century year if it is divisble by 400 then only it is leap year

LBP4
~~~~
The e-commerce company Bookshelf wishes to analyse its monthly sales data between minimum range 30 to max range 100. The company has categorized these book sales into four groups depending on the number of sales with the help of these groups the company will know which stock they should increase or decrease in their inventory for the next month. the groups are as follows

sales range		groups
30-50 ------------------> D
51-60 ------------------> C
61-80 ------------------> B
81-100 -----------------> A

write an alg to find the group for the given book sale count.

input--------> an integer salesCount represent total sales of a book
output-------> a character representing the group of given sale count
constraint---> 30<=saleCount<=100

LBP5
~~~~
Return the Next Number from the Integer Passed (IBM 2020)
implement a program that takes a number as an argument, increments the number by +1 and returns the result

input ----------> a number from the user
constraints-----> no constraints
output ---------> an incremented value

LBP6
~~~~
Free Coffee Cups
For each of the 6 coffee cups I buy, I get a 7th cup free. In total, I get 7 cups. 
Implement a program that takes n cups bought and print as an integer the total number of cups I would get.

input -------------> n number of cups from user
constraints -------> n>0
output ------------> number of cups present have

LBP7
~~~~~
Extract Digits from the number

Implement a program to extract digits from the given number

input -------------> a number from the user
constraint --------> n>0
output ------------> print digits in line sep by space

LBP8
~~~~
Sum of Digits 

Implement a program to calculate sum of digits present in the given number

input -------------> a number from the user
constraint --------> n>0
output ------------> print sum of digits


LBP9
~~~~
Sum of even Digits 

Implement a program to calculate sum of even digits present in the given number

input -------------> a number from the user
constraint --------> n>0
output ------------> print sum of even digits

LBP10
~~~~~~
Sum of odd Digits 

Implement a program to calculate sum of odd digits present in the given number

input -------------> a number from the user
constraint --------> n>0
output ------------> print sum of odd digits

LBP11
~~~~~
Sum of prime Digits 

Implement a program to calculate sum of prime digits present in the given number

input -------------> a number from the user
constraint --------> n>0
output ------------> print sum of prime digits

LBP12
~~~~~~
Sum of Digits  divisible by 3

Implement a program to calculate sum of digits that are divisible by 3 in the given number

input -------------> a number from the user
constraint --------> n>0
output ------------> print sum of digits that are divisible by 3

LBP13
~~~~~
Number of digits

Implement a program to calculate number of digits in the given number

input -------------> a number from the user
constraint --------> n>0
output ------------> print number of digits in the number

LBP14
-----
Reverse Integer

Given an integer x, return x with its digits reversed. 

input---------> a number from user
constraint ---> n>=0
output -------> reverse of the given number

LBP15
-----
Duck Number

Program to read a number and check whether it is duck number or not.

A duck number is a number which has zeros present in it, but no zero present in the begining of the number.

input-------> a number from the user
contraint --> n>=0
output------> Yes or No

LBP16
----
Number of Occurrences

Program to find number of occurences of the given digit in the number n

input ------> two numbers n and d
constraints-> no constraints
output -----> number of occurrences


LBP17 
-----
Paliandrome Number
Program to check whether the given number is paliandrome or not

A number is said to paliandrome if it is equal to the original number.

input -----> a number from the user
constraint-> n>0
output ----> Yes or No


LBP18 (IBM)
~~~~~~~~~~~~
Check BirthDay

Lisa always forgets her birthday which is on 5th July. 
So develop a function/method which will be helpful to remember her birthday.

The function/method checkBirthday return an integer 1, if it is her birthday else return 0. 
the function/method checkBirthday accepts two arguments.
Month, a string representing the month of her birth and 
day, an integer representing the date of her birthday.

input -----------> month & day 
constraints -----> no
output ----------> 1 or 0

LBP19
~~~~~~
Decimal to Binary

A network protocol specifies how data is exchanged via transmission media. 
The protocol converts each message into a stream of 1's and 0's. 
Given a decimal number, write an algorithm to convert the number into a binary form.

input ---------> a number
constraint ----> n>=0
output --------> binary number


LBP20
~~~~~~
Lucky Customer

An e-commerce website wishes to find the lucky customer who will be eligible for full value cash back. 
For this purpose,a number N is fed to the system. 
It will return another number that is calculated by an algorithm. 
In the algorithm, a sequence is generated, in which each number n the sum of the preceding numbers. initially the sequence will have two 1's in it. 
1,1,2,3,5,8......
The System will return the Nth number from the generated sequence which is treated as the order ID. The lucky customer will be one who has placed that order. 
Write an alorithm to help the website find the lucky customer.

input --------> a number
constraint ---> n>0
output -------> a number


LBP21
~~~~~~
Christmas offer

An e-commerce company plans to give their customers a special discount for the Christmas, they are planning to offer a flat discount. The discount value is calculated as the sum of all prime digits in the total bill amount.

Write an algorithm to find the discount value for the given total bill amount.

input ----> the input consists of an integer order value representing the total bill amount
condition-> no conditions
output ---> print an integer representing discount value for the given total bill amount.


LBP22
~~~~~
Niven Number

Write a program to accept a number and check and display whether it is a Niven Number or not.
Niven Number is that a number which is divisible by its sum of digits.

input -----> a number
constraint-> n>0
output ----> Niven Number or Not


LBP23
~~~~~
A Special two digit number
A special two digit number is a number such that when the sum of its digits is added to the product of its digits, the result should be equal to the original two-digit number.

Implement a program to accept a two digit number and check whether it is a special two digit number or not.

input -----> a two digit number
constraint-> 10<=n<=99
output ----> special two digit number or not

LBP24
~~~~~
Sum of even numbers
Implement a program to find sum of even number between x and y both are inclusive.

input -----> two int values
constraint-> no
output ----> sum of even numbers between x and y

LBP25:
~~~~~~~
Celsius to Fahrenheit
Create a function/method ti convert celsius to fahrenheit

input ------> celsiusconstrint --> no
output -----> Fahrenheit

F = (C*9/5)+32

LBP26
~~~~~~
Fahrenheit to Celsius

Program to convert fahrenheit to celsius.

input -------> fahrenheit
constraint --> no
output ------> celsius

formula: (F-32)*5/9

LBP27
~~~~~
Find The Sequence Sum

Given three integers i,j & k, 
a sequence sum to be the value of i+(i+1)+(i+2)..+j+(j-1)+(j-2)+..+k
(increment from i until it equals to j, then decrement from j until equals k). 
Given values i,j,k. 
caluclate the sequence sum as described.

int getSequenceSum(int,int,int);

input -------> Three int values
constraints--> no
output ------> sum based on given constraints

LBP28
~~~~~
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. 
In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

input --------> a number from the user
constriants --> no
output -------> number of ways

1----> 1
2 ---> 2
3 ---> 3
4 ---> 5
.
.
.

1 ----> 1
2 ----> 2
3 ----> 3
4 ----> 5
.
.

LBP29
~~~~~
Prime Number or Not

Write a program to check whether the given number is prime number or not. A number is said to prime if it is having only two factors. i.e. 1 and number itself.

input ------> a number from the user
constraint--> n>1
output -----> true or false


LBP30
~~~~~~
Valid Palindrome

Given a string, determine if it is a Palindrome string or not. 
A String is Palindrome if it is equal to reverse of the original string.

input ------> A String from the user
constriant--> Non-empty String
output -----> Palindrome or not


abc -----> Not Pali
aba -----> Pali
nayan ---> Pali
madam ---> pali
anna ----> pali
nitin ---> pali
radar ---> pali
level ---> pali
vobov ---> pali
malayalam -> pali

LBP31
~~~~~
Create PIN using Three given numbers

"Secure Assets Private Ltd", a small company that deals with lockers has recently started manufacturing digital locks which can be locked and unlocked using PINs (passwords). You have been asked to work on the module that is expected to generate PINs using three input numbers.

The three given input numbers will always consist of three digits each 
i.e. each of them will be in the range >=100 and <=999.

Bellow are the rules for generating the PIN.

1. The PIN should made up of 4 digits.
2. The unit (ones) position of the PIN should be the least of the units position of the three numbers.
3. The tens position of the PIN should be the least of the tens position of the three input numbers.
4. The hundreds position of the PIN should be least of the hundreds position of the three numbers.
5. The thousands position of the PIN should be the max of all digits in the three input numbers.

input ----------> three numbers
constraints ----> all the numbers must be in the range of >=100 and <=999
output ---------> PIN value

LBP32
~~~~~
Program to count number of special characters and white spaces in a given string.

input --------> A string from the user
constraint ---> non-empty string
output -------> number of special characters



LBP33
~~~~~
An e-commerce company plans to give their customers a discount for the newyears holiday. 
The discount will be calcualted on the basis of the bill amount of the order placed. 
The discount amount is the sum of all the odd digits in the customers total bill amount. 
if no odd digits is present in the bill amount, then discount will be zero.

input-> the input consists of an integer bill amount, representing the customers total bill amount.
output --> print an integer representing the discount for the given total bill amount.
constraint ---> n>0


LPB34
~~~~~~
Email validation

Email name should be starts with alphabet and should follw by number or underscore. 
It should contains either numbers or underscore finally ends with gmail.com only.
Then given email id is true otherwise false.

input ------> email id
constraint -> lowercase alphabet [a-z] followed by underscore or digit and gmail.com
output -----> true or false

abc@gmail.com --------> false
abc1@gmail.com -------> true
abc_@gmail.com -------> true
abc1_@gmail.com ------> false
abc__@gmail.com ------> false
abc34@gmail.com ------> false
abc8@gmail.com -------> true
abc@facebook.com -----> false


LBP35
~~~~~
The IT company "Soft ComInfo" has decided to transfer its messages through the N/W using new encryption technique. 
The company has decided to encrypt the data using the non-prime number concept. 
The message is in the form of a number and the sum of non-prime digits present in the message is used as the encryption key.
Write an algorithm to determine the encryption key.
input ------> The input consists of an integer numMsg representing the numeric form of the message.
output ------> print an integer representing the encryption key.

note: Digit 1 and 0 are considered as a prime number.

prime digits -----> 0,1,2,3,5,7
non-prime --------> 4,6,8,9


LBP36
~~~~~
Implement a program to return First capital letter in a String
input -------> A string from the user
constraint --> non-empty string
output ------> First Capital letter


LBP37
~~~~~~
Implement a program to calculate toggle case of each characters of a string

input -------> A String from user
constriant --> non-empty String
output ------> toggle case string

HeLlO ---> hElLo


LBP38
~~~~~
A company launched a new text editor that allows users to enter english letters, numbers and white spaces only. If a user attempts to enter any other type of characters, it is counted as miss.
Given a String text, write an algorithm to help the developer detect the number of misses by a given user in the given input.

input --------> String
constraint ---> non-empty string
output -------> number of misses

Good@morning! -----> 2


LBP39
~~~~~~
Implement the following function
	nt BlackJack(int n1,int n2);

the function accepts two +ve integers n1 and n2 as its arguments.
Implement the function on given two vlaues to return an int value as follows

return whichever value is nearest to 21 without going over. Return if they go both go over.

input --------> two int values n1 and n2
constraint ---> no
output -------> 0 or n1 or n2


LBP40
~~~~~
A company wishes to transmit data to another server. 
The data consists of numbers only. 
To secure the data during transmission, they plan to reverse the data during transmission,
they plan to reverse the data first.
Write an algorithm to reverse the data first

input -----> an integer data, representing the data to be transmitted
output ----> print an integer representing the given data in reverse form


LBP41
~~~~~
One Time Password
A company wishes to devise an order confirmation procedure. 
They plan to require an extra confirmation instead of simply auto-confirming the order at the time it is placed. 
for this purpose, 
the system will generate one time password to be shared with the customer.
The customer who is placing the order has to enter the OTP to confirm the order.
The OTP generated for the requested order ID, as the product of the digits in orderID. 

Write an algorithm to find the OTP for the OrderID.

input -----> an intger representing order id
output ----> an integer representing OTP


LBP42
~~~~~
Jackson, a math student, is developing an application on prime numbers.
for the given two integers on the display of the application, 
the user has to identify all the prime numbers within the given range 
(including the given values). 
afterwards the application will sum all those prime numbers. 
Jackson has to write an algorithm to find the sum of all the prime numbers of the given range.
Write an algorithm to find the sum of all the prime numbers of the given range.

input -----> two space sepearted integers RL and RR.
output ----> sum of the prime numbers between RL and RR.

Logic:
1------------> read x and y
2 -----------> check each number inbetween x and y
3 -----------> if it is a prime then add it into sum
4 -----------> print sum

LBP43
~~~~~
An e-Commerce company plans to give thier customers a discount for the newyears holiday. 
The discount will be calcualted on the basis of the bill amount of the order place. 
The discount amount is the product of the sum of all odd digits and the sum of all even digits of the customers total bill amount.

input ----> an integer bill amount, representing the total bill amount of the customer.
output ---> print an integer representing the discount amount for the given total bill.


LBP44
~~~~~
War of Numbers

There is a great war between the even and odd numbers. 
Many numbers already lost thier life in this war and its your task to end this. 
You have to determine which group sums larger. 
the even, or the odd, the larger group wins.

Create a function that takes an array of integers , sums the even and odd numbers seperately, then return the difference between sum of even and odd numbers.

Note: if result is -ve convert it into +ve.

input --------> number and array elements
constraint ---> no
output -------> difference between sum of even and odd numbers


LBP45
~~~~~
Perfect Number

Create a function that tests whether or not an integer is a perfect number. 
A perfect number is a number that can be written as sum of its factors. (equal to sum of its proper divisors) excluding the number itself.

input ------> a number from the user
constraint -> n>0
output -----> true or false

Eg:

6 =======> 1,2,3,6 ====> 1+2+3=6
8 =======> 1,2,4,8 ====> 1+2+4=7



LBP46
~~~~~~
Magic Date

Program to read date, month and year from the user and check whether it is magic date or not. Here are the rules for magic date.

dd-mm-yyyy
dd/mm/yyyy
dd mm yyyy ----> C lang

1) mm*dd is a 1-digit number that matches the last digit in YYYY
2) mm*dd is a 2-digit number that matches the last two digits in YYYY
3) mm*dd is a 3-digit number that matches the last three digits in YYYY

1-1-2001 ===> 1*1=1
1-1-2002 ===> 1*1=1
5-2-2010 ===> 5*2=10

input --------> three int values
constraint----> no
output -------> true or false


LBP47
~~~~~
Oddish or Evenish

Create a function that determines whether a number is Oddish or Evenish. 
A number is Oddish if the sum of all of its digits is Odd, 
and number is Evenish if the sum of all of its digits is even, 
if a number is Oddish return Oddish else return Evenish.

input ----------> a number
constraint -----> n>0
output ---------> Oddish or Evenish


LBP48
~~~~~~
video length in seconds

Accept video length in minutes the format is mm:ss in String format, create a function that takes video length and return it in seconds.

input --------> video length in mm:ss
constraint----> no
output -------> length in seconds

01:00 ====> 60
02:02 ====> 122 
02:01 ====> 121

LBP49
~~~~~~
Next Prime

Given an integer, create a function that returns the next prime. If the number is prime, return the number itself.

input ----------> a number
constraint -----> prime number
output ---------> prime number

10---->11
11---->11
14---->17 etc

LBP50
~~~~~
Sum of digits between two numbers

Create a function that sums the total number of digits between two numbers inclusive. for example, if the numbers are 19 and 22, then (1+9)+(2+0)+(2+1)+(2+2)=19.

input ----------> two numbers from the user
constraints ----> no
output ---------> sum of digits between n1 and n2

LBP51
~~~~~~
Defanging an IP address
Given a valid IP address, return a defanged version of that IP address. A defanged IP address replaces every period '.' with "[.]".
input ----------> A string
constraint -----> non-empty String
output ---------> replacement String

1.1.1.1  ====> 1[.]1[.]1[.]1

LBP52
~~~~~~
Jewels and Stones

You are given Strings jewels representing the types of stones that are jewels, and stones representing the stones you have.
Each character in stones is a type of stone you have 
you want to know how many of the stones you have are also jewels.

Letter are case sensitive. so "a" is considered as a different type of stone from "A".

input ------> A string
constriant -> no
output -----> how many of the stones

J="aA"
S="aAAbbbb"
1+2=3

LBP53
~~~~~
Shuffle String

Given a string s, and an integer array indices of the same length. 
The string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string, 
return shuffled string.

input ---------> a string and an array
constraint ----> no
output --------> a string


s=art
  012
a=102
  012

ts=0=>r 1=>a 2=>t

LBP53
~~~~~
Shuffle String

Given a string s, and an integer array indices of the same length. 
The string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string, 
return shuffled string.

input ---------> a string and an array
constraint ----> no
output --------> a string


s=art
  012
a=102
  012

ts=0=>r 1=>a 2=>t

LBP55
~~~~~
Check if String ending matches second String

Create a function/method that takes two Strings and returns true of the first string ends with second string, otherwise return false.

Input:  two strings
Constraints: No 
Output: true or false

abc, bc -----> true
kalyan, an --> true
kalyan, a ---> false

LBP56
~~~~~
Shuffle the Name

Create a function/method that accepts a string (of person’s first and last name) and returns a string with in first and last name swapped).

Input:  two space separated strings
Constraints: No 
Output: return last name followed by first name

Prakash Babu -----> Babu Prakash

LBP57
~~~~~
Reverse the order of a String

create a method/function that takes a string as its argument and returns the string in reversed order.

input ---------> a string 
constraint ----> no
output --------> reversed string

Hello ----------> olleH
Hello World ----> dlroW olleH

LBP58
~~~~~
Re-form the word

A word has been split into a left part and right part. Re-form the word by adding both halves together changing the first character to an uppercase letter.

input ---------> two strings from the user
constraint ----> no
output --------> concatenated string with caps in first character

prakash babu ----> Prakashbabu

LBP59
~~~~~
Anagrams

Two strings a and b are called anagrams, if they contain all the same characters in the same frequencies.

input --------> two strings a and b
constraint ---> no
output -------> true or false

abcd,dabc -----> anagrams
abcd,dabb -----> not anagrams
listen,silent -> anagrams

LBP60
~~~~~
Max Occurring Character
Given a string, implement a program to find max occurring character in the given string

input -------> A string from the user.
constraints--> No
output ------> max occurring character

welcome ----> e 
java -------> a

LBP61
~~~~~
You are given coordinates, a string that represents the coordinates of a square of the chess board. bellow is the chess board for your reference.

Return True if the saquare is in white, and false if the square is in Black.

The coordinates will always represent a valid chess board square. The coordinates will always have the letter first, and the number second.

input ----------> a string
constraint -----> length of the string is 2, a<=c[0]<=h and 1<=c[1]<=8
output ---------> true or false

LBP62
~~~~~~
Find the Bomb
Write a function that finds the word "bomb" in the given string (not case sensitive) return "DUCK!" if found, else return "Relax there's no bomb."

input ---------> a string
constraint ----> no
output --------> "DUCK!" or "Relax, There's no bomb."

LBP63
~~~~~
How many vowels
Create a function that takes a string and returns the number of vowels contained within it.

input -----------> a string
constraint ------> no
output ----------> number of vowels

LBP63
~~~~~
How many vowels

Create a function that takes a string and returns the number of vowels contained within it.

input -----------> a string
constraint ------> no
output ----------> number of vowels


LBP65
~~~~~
Stuttering Function

write a function that shutters a word as if someone is struggling to read it. 
The first two letters are repeated twice with an ellipsis ... , and then the word is pronounced with a question mark?

input ------------> a string
contraint --------> no
output -----------> xx... xx... ~~~~~~~?


abc =====> ab...ab...abc?

s=abc
r=ab...ab...abc?

LBP66
~~~~~
Repeating Letters

Create a method that takes a string and returns a string in which each character is repeated once.

input ---------------> String from the user
constraint ----------> No
output --------------> String

String ------> SSttrriinngg

LBP67
~~~~~
Double Letters

Create a function that takes a word and returns true if the word has two consecutive identical letters.

input ---------> A string
constraint-----> No
output --------> true or false

abbc -----> true
abcd -----> false
abab -----> false

LBP68
~~~~~
Andy, Ben and Charlotte are playing a board game. 
The three of them decided to come up with a new scoring system. 
A player's first initial ("A","B" & "C") denotes that players scoring a single point.
Given a string of capital letters. returns an array of the player's scores.

input --------------> A String
constraint ---------> No
output -------------> score

A ---------------> 1 0 0
AB --------------> 1 1 0
ABC -------------> 1 1 1
AABBC -----------> 2 2 1

LBP69
~~~~~
Remove Every vowel from a String

Create a function that takes a string and returns a new string with all vowels removed. 

input -------------> a string 
constraints -------> No
output ------------> a string

welcome ------> wlcm
prakash ------> prksh

Note: Search, Replacement, Removal --------> Regular Expression

LBP70
~~~~~
Space between each character

Create a function that takes a string and returns a string with spaces in between all of the characters.

input ------------> a string
constraints-------> No
output -----------> string

java -----> j a v a
prakash --> p r a k a s h
python ---> p y t h o n

LBP71
~~~~~
VOWEL REPLACER

Create a function that replaces all the vowels in a string with a specified character,

input -----------> A string from the user and a character
cons ------------> no
output ----------> A string

welcome,% ----> w%lc%m%

LBP72
~~~~~
Say "Hello" Say "Bye"

Write a function that takes a string name and number num (either 1 or 0) and 
return "Hello"+name if number is 1, 
otherwise "Bye"+name.

input ------> a string from the user
constraint -> no
output -----> a string

prakash,1 -----> Hello prakash
java,0 --------> Bye java
python,1 ------> Hello python

LBP73
~~~~~~
VALID ZIP CODE

zipcodes consists of 5 consecutive digits. 
Given a string, write a function to determine whether the input is a valid zip code. 
a valid zipcode is as follows

1. must contain only numbers.
2. it should not contain any spaces.
3. length should be only 5.

input ------> A string
constraint -> no
output -----> true or false

11111 ----> true
4564 -----> false
123 4-----> false

LBP74
~~~~~
Returns the middle character of a string

create a function that takes a string and returns, the middle character(s). 
if the word's length is odd return the midlle character.
if the word's length is even, return the middle two characters.

input -----> a string from the user
constraint-> no
output ----> middle character(s)

abc -----> 3 -> Odd ====> b
xyz -----> 3 -> Odd ====> y
abcde ---> 5 -> Odd ====> c
abcd ----> 4 -> Even ===> bc 
middle --> 6 -> Even ===> dd
012345

LBP75
~~~~~
Index of first vowel

create a function that returns the index of first vowel in a string

input ------> a string
con --------> no
output -----> an int value

test ------> e(1) -------------> 1
welcome ---> e(1),o(4),e(6) ---> 1
python ----> o(4) -------------> 4
012345

LBP76
~~~~~
Longest Word
Write a function that finds the longest word in a sentence.
If two or more words are found, return the first longest word. 
Characters such as apostophe, comma, period (and the like) count as part of the word 
(e.g. O'Connor is 8 characters long).

input ------> a string from the user
con --------> no
output------> longest word 

C C++ JAVA AND PYTHON =====> PYTHON
1  3    4   3    6

case1:

prakash sir classes are very good ====> prakash
   7     3      7   3    4    4

case2:

prakash sir classes are very good ====> classes (based on asc value)
   7     3      7   3    4    4

LBP77
~~~~~
Print all permutations of a string

Given a string str, the task is to print all the permutations of str.
A permutation is an arrangement of all or part of a set of objects, with regard to the order of the arrangement. 
For instance, the words ‘bat’ and ‘tab’ represents two distinct permutation (or arrangements) of a similar three letter word.

input ----> string from the user
con ------> no
output ---> all permutations of the string

A (1!=1)  ----> A
AB(2!=2)   ---> AB BA
ABC(3!=6)  ---> ABC ACB BAC BCA CAB CBA
ABCDE (5!=120) --> 120 

back tracking ----> 

LBP78
~~~~~
Removing Duplicate Characters from a string
Given a string S, the task is to remove all the duplicates in the given string. 

input --------> a string from the user
con ----------> remove all duplicates
output -------> a string without duplicates


hello -----> helo
program ---> progam

LBP79
~~~~~
Swap corner words and reverse middle characters

Write a Java program to take an input string and exchange the first and last word and reverse the middle word.

input -------> a string
con ---------> no
output ------> a string

Hello welcome to Java ------> Java ot emoclew Hello

fs = Hello
ls = avaJ

LBP80
~~~~~~
Valid Hex Code
Create a function that determines whether a string is a valid hex code.

A hex code must begin with a pound key # and is exactly 6 characters in length. 
Each character must be a digit from 0-9 or an alphabetic character from A-F. 
All alphabetic characters may be uppercase or lowercase.

input -----> a string from the user
con -------> no
output ----> true or false

#ABCDFE ----> invalid
#123456 ----> valid
#A1B2C3 ----> valid

0-9A-F
#[0-9a-fA-F]{6}

LBP81
~~~~~~
Even Length Words
Write a program to print even length words in a string?

input -----> a string from the user
con -------> no
output ----> list of strings with even length

hello welcome to java ----> welcome java
a ab abc abcd abcde abcdef --> ab abcd abcdef

LBP82
~~~~~
Change Every Letter to the Next Letter

Write a function that changes every letter to the next letter:

"a" becomes "b"
"b" becomes "c"
"d" becomes "e"
and so on ...
'x' becomes 'y'
'y' becomes 'z'
'z' becomes ''

note: there is no z's in test cases, be happy.

input ------> a string from the user
cons -------> no
output -----> modified string

LBP83
~~~~~
First N Vowels

Write a function that returns the first n vowels of a string.

input ------> a string from the user and an integer value
cons -------> Return "invalid" if the n exceeds the number of vowels in a string.
output -----> return first n vowels in the string

welcome to java, 1 -----> e
welcome to java, 2 -----> eo
welcome to java, 3 -----> eoe
welcome to java, 6 -----> eoeoaa 
welcome to java, 7 -----> invalid

LBP84
~~~~~
Is the String in Order?

Create a function that takes a string and returns true or false, depending on whether the characters are in order or not.

input -------> a string from the user
cons --------> for non-empty string print invalid
output ------> true or false

abc ------> true
prakash --> false

LBP85
~~~~~
Integer to English Words
Convert a non-negative integer num to its English words representation.

input ------> a number from the user
con --------> n>0
output -----> number in English words


123 ===> one hundred twenty three
9999 ==> Nine Thousand Nine Hundred Ninty Nine

LBP86
~~~~~~
C*ns*r*d Str*ngs
Someone has attempted to censor my strings by replacing every vowel with a *, l*k* th*s. Luckily, I've been able to find the vowels that were removed.
Given a censored string and a string of the censored vowels, return the original uncensored string.

input --------> original & replacement strings
con ----------> no
output -------> updated string after replacement

w*lc*m*,eoe ====> welcome

LBP87
~~~~~
parentheses balance

Given a string S of '(' and ')' parentheses, we add the minimum number of parentheses ( '(' or ')', and in any positions ) so that the resulting parentheses string is valid.
Formally, a parentheses string is valid if and only if:
It is the empty string, or It can be written as AB (A concatenated with B), where A and B are
valid strings, or It can be written as (A), where A is a valid string. 
Given a parentheses string, return the minimum number of parentheses we must add to make the resulting string valid.

input --------> a string from the user
con ----------> no
output -------> number of parentheses to be added

() -------> 0
()( ------> 1
()()() ---> 0
(((( -----> 4

LBP88
~~~~~
American keyboard
Given a string, return the true if that can be typed using letters of alphabet on only
one row's of American keyboard like the image below.
In the American keyboard:

the first row consists of the characters "qwertyuiop",
the second row consists of the characters "asdfghjkl", and
the third row consists of the characters "zxcvbnm".

Note: 
1. You may use one character in the keyboard more than once. 
2. You may assume the input string will only contain letters of alphabet.

input -------> a string from the user
cons  -------> no
output ------> true or false

LBP89
~~~~~
Rotate String 

We are given two strings, A and B. A shift on A consists of taking string A and moving the leftmost character to the rightmost position. 
For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. 
Return True if and only if A can become B after some number of shifts on A.

input ------> two strings from the user
con --------> non-empty strings
output -----> true or false

LBP90
~~~~~
Missing Letters

Given a string containing unique letters, return a sorted string with the letters that don't appear in the string.

input ---------> a string from the user
con -----------> no
output --------> return missing characters

abc -----> defghijklmnopqrstuvwxyz

LBP91
~~~~~
Replace Letters With Position In Alphabet.
Create a function that takes a string and replaces each letter with its appropriate position in the alphabet.
"a" is 1, "b" is 2, "c" is 3, etc, etc.

Note: If any character in the string isn't a letter, ignore it.

input -----------> a string from the user
constriant ------> non-empty string
output ----------> position of characters seperated by space

abc -----> 1 2 3

LBP92
~~~~~
Replace character with it's occurrence

Implement a Program to replace a character with it's occurrence in given string.

input ---------> a string and a character from the user.
con -----------> non-empty string
output --------> replaced string

LBP93
~~~~~
first non-repeated character

Program to find first non-repeated character

input----> a non-empty string from the user
con -----> no
output --> non-repeated character

india ----> n
indian ---> d

LBP94
~~~~~
Pangrams

Implement a program to check whether the given string pangram or not. 
A pangram is a string that contains all the letters of the English alphabet. 
An example of a pangram is "The quick brown fox jumps over the lazy dog"

input ----> a string from the user
con ------> non-empty string
output ---> Yes or No

LBP95
~~~~~
Print First Letter of each Word

Implement a function/Method to return first character in each word from the given input string.

input-----> a string
con-------> no
output ---> first character in each string

LBP96
~~~~~
Number of vowels

Implement a program to return number of vowels present in the given string

input ---------> a string from the user
con -----------> non-empty string
output --------> return number of vowels

LBP97
~~~~~
Number of consonants

Implement a program to return number of consonants present in the given string

input ---------> a string from the user
con -----------> non-empty string
output --------> return number of consonants

LBP98
~~~~~
Check only digits

Implement a program to check if a string contains only digits.

input ----> a string from the user
con ------> no
output ---> Yes or No

LBP99
~~~~~
Capitalize Every word first character
Implement a program to capitalize first letter of each word in a string.

input ----> a string from the user
con ------> non-empty string
output ---> a string with capitalization

welcome to programming -----> Welcome To Programming

LBP100
~~~~~~
Student Rewarded
You are given a string representing an attendance record for a student. The record only contains the following three characters: 
'A' : Absent. 
'L' : Late. 
'P' : Present. 
A student could be rewarded if his attendance record doesn't contain more than one 'A' (absent) or more than two continuous 'L' (late).
You need to return whether the student could be rewarded according to his attendance record.

input ------> a string from the user
con --------> non empty string
output -----> Yes or No

PPP ---> Yes
PAP ---> Yes
PAA ---> No
APA ---> No
PPL ---> Yes
PLL ---> Yes
LLL ---> No
LPAPLPPLL --> Yes

LBP101
~~~~~~~
reading and writing an array
Implement a program to read an array elements and write on the screen.
input -------> size of the array and array elements 
con ---------> size<100 
output ------> the given array

5
7 5 3 1 9
7 5 3 1 9

array: it is a collection of similar type of data elements (int)
array index starts from 0 to size-1
n
for(i=0;i<n;i++)
for(i=1;i<=n;i++)

LBP102
~~~~~~
sum of all elements in array
Implement a program to read an array elements and print sum of all its elements.
input -------> size of the array and array elements 
con ---------> size<100 
output ------> sum of all elements

LBP103
~~~~~~
sum of even numbers in an array
Implement a program to read an array elements and print sum of all even elements.

input -------> size of the array and array elements 
con ---------> size<100 
output ------> sum of all even elements


LBP104
~~~~~~
sum of odd numbers in an array
Implement a program to read an array elements and print sum of all odd elements.

input -------> size of the array and array elements 
con ---------> size<100 
output ------> sum of all odd elements


LBP105
~~~~~~~
sum of prime numbers in an array
Implement a program to read an array elements and print sum of all prime elements.
input -------> size of the array and array elements 
con ---------> size<100 
output ------> sum of all prime elements

LBP106 
~~~~~~
sum of palindrome numbers in an array
Implement a program to read an array elements and print sum of all palindrome numbers in array.

input -------> size of the array and array elements 
con ---------> size<100 
output ------> sum of all palindrome numbers


LBP107
~~~~~~~
sum of strong numbers in an array
Implement a program to read an array elements and print sum of all strong numbers in array.

input -------> size of the array and array elements 
con ---------> size<100 
output ------> sum of all strong numbers

145 = 1!+4!+5!=1+24+120=145 ----> strong number

LBP108
~~~~~~
sum of elements in an array ending with 3
Implement a program to read an array elements and print sum of elements ending with 3 in array.

input -------> size of the array and array elements 
con ---------> size<100 
output ------> sum of elements ending with 3

LBP109
~~~~~~
search for an element in an array
Implement a program to search for an element in an array.

input -------> size, array elements and element to search
con ---------> size<100
output ------> search for the given element and return index

5
1 2 3 5 4

1 ----> 0
2 ----> 1
3 ----> 2
5 ----> 3
4 ----> 4
6 ----> -1

LBP110
~~~~~~
sort the elements in an array ASC
Implement a program to sort the given array elements in ASC order.

input -----> size and array elements
con -------> size<100
output ----> sorted array in ASC

LBP111
~~~~~~
sort the elements in an array DESC
Implement a program to sort the given array elements in DESC order.

input -----> size and array elements
con -------> size<100
output ----> sorted array in DESC

LBP112
~~~~~~
binary search
Implement a program to search for an element in an array.

input -------> size, array elements and element to search
con ---------> size<100
output ------> search for the given element

LBP113
~~~~~~
max element in an array
Implement a program to read array elements and find the max element in an array.
input -------> size and array elements.
con ---------> size<100
output ------> return max element

5
4 2 5 1 3 ===> 1 2 3 4 5

a[n-1]====>1st max element
a[n-2]====>2nd max element
a[n-3]====>3rd max element
.
.
.
a[3-1] =====>3rd min element
a[2-1] =====>2nd min element
a[1-1] =====>1st min element

LBP114
~~~~~~
min element in an array
Implement a program to read array elements and find the min element in an array.

input -------> size and array elements.
con ---------> size<100
output ------> return min element

LBP115
~~~~~~
diff between largest and smallest element in array
Implement a program to read array elements and find the difference between max and min element in an array.

input -------> size and array elements.
con ---------> size<100
output ------> return difference between max and min element.

Logic=====> a[n-1]-a[1-1]

LBP116
~~~~~~~
second largest element in an array
Implement a program to read array elements and find the second max element in an array.

input -------> size and array elements.
con ---------> size<100
output ------> return second max element in array

LBP117
~~~~~~
second smallest element in an array
Implement a program to read array elements and find the second min element in an array.

input -------> size and array elements.
con ---------> size<100
output ------> return second min element in array

LBP118
~~~~~~~
number of occurrences of an element
Implement a program to find the number of occurrences of the given element.

input -------> size,array element and key element
con ---------> size<100
output ------> return number of occurrences

LBP119
~~~~~~
inserting element at first position in an array
Implement a program to insert an element into an array at the first position

input -------> size,array elements and element to be inserted
con ---------> size<100
output ------> return array after insertion

LBP120
~~~~~~
inserting element at last position in an array
Implement a program to insert an element into an array at the last position

input -------> size,array elements and element to be inserted
con ---------> size<100
output ------> return array after insertion

LBP121
~~~~~~
delete an element from first location in an array
Implement a program to delete an element from an array at the first position

input -------> size,array elements 
con ---------> size<100
output ------> return array after deleting from first location

5
1 2 3 4 5

2 3 4 5

LBP122
~~~~~~
delete an element from last location in an array.
Implement a program to delete an element from an array at the last position

input -------> size,array elements 
con ---------> size<100
output ------> return array after deleting from last location

LBP123
~~~~~~
delete an element from an array at the given location
Implement a program to delete an element from an array at the position

input -------> size,array elements and position
con ---------> size<100
output ------> return array after deleting from the location

LBP124
~~~~~~
delete an element from an array
Implement a program to delete the given element from an array 

input -------> size,array elements and element
con ---------> size<100
output ------> return array after deleting

LBP125
~~~~~~~
update an element in an array
Implement a program to update an element in the given array

input ------> size,array elements and element to be updated (old element & new element)
con---------> size<100
output -----> return array after updating

Eg:
5
1 2 3 4 5
3
9
output: 1 2 9 4 5

LBP126
~~~~~~~
update an element in an array
Implement a program to update an element in the given array based on position

input ------> size,array elements and element to be updated and location
con---------> size<100
output -----> return array after updating

Eg:
5
11 22 77 88 10
1
99

output: 11 99 77 88 10

LBP127
~~~~~~
array reverse
Write a program to reverse the elements present in an array

input ------> size, array elements 
con --------> size<100
output -----> return array in reverse

Eg:
5
1 2 3 4 5
output: 5 4 3 2 1

LBP128
~~~~~~~
increment every element in an array by one unit.
Implement a program to increment every element by one unit in array.

input ------> size, array elements 
con --------> size<100
output -----> increment each element by one unit

LBP129
~~~~~~
number of duplicate elements in array
Implement a program to find the number of duplicate elements present in the given array.

input ------> size, array elements 
con --------> size<100
output -----> number of duplicate elements in the array

5
12 13 14 12 13
count = 2

LBP130
~~~~~~
print unique elements in array
Implement a program to find the unique elements present in the given array.

input ------> size, array elements 
con --------> size<100
output -----> print unique elements present in the array

n=5, 1 1 2 3 4 ====> 1 2 3 4
n=5, 1 1 1 2 2 ====> 1 2

LBP131
~~~~~~
sort an array of 0s, 1s and 2s.
Implement a program to read an array and sort array elements with 0s, 1s and 2s.

input ------> size, array elements 
con --------> size<100
output -----> print sorted elements

LBP132
~~~~~~
replace every element with the greatest element on its right side
Implement a program to read an array and replace every element with the greatest element on its right side.

input ------> size, array elements 
con --------> size<100
output -----> print updated array elements

3
7 8 6 ===> 8 8 6

5
2 4 3 1 0 ===> 4 4 3 1 0

LBP133
~~~~~~
sum of two arrays.
Implement a program to find the sum of two arrays and display the result array

input -------> size and array elements
con ---------> no
output ------> print resultent array

4
1 2 3 4
4 3 2 1

5 5 5 5 

LBP134
~~~~~~
sum of elements available at even index
Implement a program to find the sum of elements avaiable at even index locations in an array.

input ----> size and array elements
con ------> no
output ---> print sum value

5
1 2 3 4 5
0 1 2 3 4 ====> 0,2,4 ===> 1+3+5=9

LBP135
~~~~~~
sum of elements available at odd index
Implement a program to find the sum of elements avaiable at odd index locations in an array.

input ----> size and array elements
con ------> no
output ---> print sum value

5
1 2 3 4 5
0 1 2 3 4 ===> 1,3 ===> 2+4=6

LBP136
~~~~~~
sum of first and last, second and second last and so on
Implement a program to find the sum of first and last, second and second last and so on in an array.

input -----> size and array elements
con -------> no
output ----> print sum of first and last, second and second last and so on

1,2,3,4,5
6,6,6

1,2,3,4,5,6
7,7,7

LBP137 
~~~~~~
print reverse of each number in an array
Implement a program to print reverse of each element in an array

input -----> size and array elements
con -------> no
output ----> print reverse of each element in an array

LBP138
~~~~~~
number of even and odd elements
Implement a program to find number of even and odd elements in the given array

input -------> size and array elements
con ---------> no
output ------> print number of even and odd elements line by line

LBP139
~~~~~~
Reverse only First half of the elements.
Implement a program to reverse only first half of the array and keep remaining elements as original.

input ------> size and array elements
con --------> no
output -----> reverse only first half of the array

LBP140
~~~~~~
Difference between two arrays.
Implement a program to find the difference between two arrays

input -------> size and array elements
con ---------> no
output ------> print difference between two arrays as third array

LBP141
~~~~~~
rearrange an array in such an order that– smallest, largest, 2nd smallest, 2nd largest and on
Implement a program to rearrange an array in such an order that- smallest,largest,2nd smallest, 2nd largest and so on.

input ------> size and array elements
con --------> no
output -----> print the elements smallest,largest,2nd smallest,2nd largest and so on.

n=4
[1,2,3,4] ====> 1,4,2,3

n=5
[1,2,3,4,5] ==> 1,5,2,4,3,3

n=6
[1,2,3,4,5,6] => 1,6,2,5,3,4

LBP142
~~~~~~
Array of multiples
Implement a program to create an array with n elements by taking multiples of m.

input -----> m and n 
con--------> size of the array must be n
output ----> return an array with n elements which contains multiples of m.

LBP143
~~~~~~
Inclusive Array Ranges
Write a function that, given the start startNum and end endNum values, return an array containing all the numbers inclusive to that range. 
Note:
The numbers in the array are sorted in ascending order.
If startNum is greater than endNum, return an array with the higher value. 

input -----> n and m values
con -------> no
output ----> return an array with elements from n to m.

LBP144
~~~~~~
Find the Average of the Letters
Create a function that returns the average of an array composed of letters. First, find the number of the letter in the alphabet in order to find the average of the array.

A = 1
B = 2
C = 3
D = 4
E = 5

average = total sum of all numbers / number of item in the set
Return the result rounded to two decimal points.

input -----> an array as string
con -------> no
output ----> Return the result rounded to two decimal points.

LBP145
~~~~~~~
Eliminate Odd Numbers within an Array
Create a function that takes an array of numbers and returns only the even values.

Note:
Return all even numbers in the order they were given.
All test cases contain valid numbers ranging from 1 to 3000.

input -----> size and an array
con -------> no
output ----> remove all odd numbers and print

LBP146
~~~~~~
Positive Count / Negative Sum
Create a function that takes an array of positive and negative numbers. Return an array where the first element is the count of positive numbers and the second element is the sum of negative numbers.

input -------> size and an array
con ---------> If given an empty array, return an empty array and 0 is not positive.
output ------> two space seperated int values.


LBP147
~~~~~~
Return the Sum of the Two Smallest Numbers.
Create a function that takes an array of numbers and returns the sum of the two lowest positive numbers.

input -------> size and an array
con ---------> Dn't count negative numbers
output ------> sum of two smallest positive numbers

LBP148
~~~~~~
Retrieve the Last N Elements
Write a function that retrieves the last n elements from an array.

input -------> size, an array and N value
con ---------> return 0 if n exceeds size of the array
output ------> last N elements

LBP149
~~~~~~
Mini Peaks
Write a function that returns all the elements in an array that are strictly greater than their adjacent left and right neighbors.

input ------> size, an array
con---------> Do not count boundary numbers, since they only have one left/right neighbor.
output -----> an array

7
4 5 2 1 4 7 2
0 1 2 3 4 5 6
5 7

LBP150
~~~~~~
All Numbers In Array Are Prime
Create a function thats takes an array of integers and returns true if every number is prime. Otherwise, return false.

input -------> size and an array
con ---------> 1 is not a prime number.
output ------> true or false

LBP151
~~~~~
Sum of adjacent Distances.
Write a program to calculate and return sum of distances between the adjacent numbers in an array of +ve integers.

input -------> size and array elements
con ---------> no
output ------> an int value

5
10 11 7 12 14 -----> 12
1+4+5+2=12
a[i]-a[i+1]

LBP152
~~~~~~
Odd Even Online Game
You are playing an online game. In the game, a list of N numbers is given. The player has to arrange the numbers so that all the odd numbers of the list come after even numbers. Write an algorithm to arrange the given list such that all the odd numbers of the list come after the even numbers.

input -------> size and array elements
con ---------> no
output ------> all even numbers and odd numbers.

LBP153
~~~~~~~
GARMENTS COMPANY APPAREL
The garments company apparel wishes to open outlets at various locations. The company shortlisted several plots in these locations and wishes to select only plots that are square shaped. Write an algorithm to help Apparel find the number of plots that it can select for its outlets.

input -----> the first line of i/p consists of an integer N, and A1,A2,...AN representing areas of outlets.
output ----> print an integer representing the number of plots that will be selected for outlets.

8
79 77 54 81 48 34 25 16 ---> 3

81, 25, 16 ----> 3

LBP154
~~~~~~~
POOLED CAB SERVICE
A compnay wishes to provide can service for their N employees. The employees have distance ranging from 0 to N-1. The company has calculated the total distance from an employee's residence to the company, considering the path to be followed by the cab is a straight path. The distance of the company from it self is 0. The distance for the employees who live to the left side of the company is represented with a negative sign. The distance for the employees who live to the right side of the company is represented with a positive sign. the cab will be allotted a range of distance. The company wishes to find the distance for the employees who live within the particular distance range.
write a alogrithm to find the distance for the employees who live within the distance range.

input ----> size of the list N ,SD,ED and an array of distance
output ---> distance within the range else -1
con ------> con

6
30 50
29 38 12 48 39 55

t=a[i];
if(t<0)	t=-t;

if t>=30 and t<=50:
	print a[i]

LBP155
~~~~~~~
Kth SHORTEST PROCESSING QUEUE
A company wishes to modify the technique by which tasks in the processing queue are executed. 
There are N processes with unique ID's from 0 to N-1. 
Each of these tasks has its own execution time.
The company wishes to implement a new algorithm for processing tasks. 
for this purpose they have identified a value K by the new algorithm, 
the processor will first process the task that has the Kth shortest execution time.

Write an algorithm to find the Kth shortest execution time.

input ----> array size, k value and array
output ---> kth shortest execution time.

Logic:
1. read an array.
2. sort the array in ASC.
3. read k value.
4. print a[k-1].

LBP156
~~~~~~
INDEX FILTERNING
Create a function that takes two inputs: idx (an array of integers) and str (a string). 
The function should return another string with the letters of str at each index in idx in order.

input ----------> a string followed by size and an array
constraint -----> output must be in lower case but input many not be.
output ---------> a string contained in the specified locations given in the array.

Ex:
welcome
0123456
4
3 0 2 1
cwle

LBP157
~~~~~~
SEVEN BOOM!
Create a function that takes an array of numbers and return "Boom!" if the digit 7 appears in the array.
Otherwise, return "there is no 7 in the array".

input ---------> an array from the user
constraint ----> no
output --------> Boom! or "there is no 7 in the array".

LBP158
~~~~~~
Positives and Negatives
Create a function which validates whether a given array alternates between positive and negative numbers.

input --------------> an array size and array
con ----------------> no
output -------------> true or false

LBP159
~~~~~~
Check if All Values Are True
Write a function that returns true if all parameters are truthy, and false otherwise

input --------------> an array size and array
con ----------------> no
output -------------> true or false

LBP160
~~~~~~
Shared Digits
Create a function that returns true if each pair of adjacent numbers in an array shares at least one digit and false otherwise.

input --------> array size and array elements
con ----------> no
output -------> true or false

LBP161
~~~~~~~
Combined Consecutive Sequence
Write a function that returns true if two arrays, when combined, form a consecutive sequence. 
A consecutive sequence is a sequence without any gaps in the integers, 
e.g. 1, 2, 3, 4, 5 is a consecutive sequence, but 1, 2, 4, 5 is not.


input --------> two array sizes and array elements
con ----------> no
output -------> true or false

LBP162
~~~~~~
Count 5s And Win
Arun is obsessed with primes, especially five. 
He considers a number to be luckiest if it has the highest number of five in it. 
If two numbers have the same frequency of five, Arun considers the last occurence of them to be luckiest, 
and if there is no five in any number, the first given number is considered luckiest. 
Help him choose the luckiest number.

input -----------> array size and elements
con -------------> no
output ----------> return luckiest number

LBP163
~~~~~~
Find the Single Number
Write a function that accepts an array of numbers (where each number appears three times except for one which appears only once) and finds that unique number in the array and returns it.

input -----------> array size and elements
con -------------> no
output ----------> return non-repeated number

LBP164
~~~~~~~
Update Every Element
Implement a progra to update every array element with multiplication of previous and next numbers in array.

input -----> size and array elements
con--------> no
output ----> updated array


LBP165
~~~~~~
Maximum Energy in Science Lab
In a science research lab, combining two nuclear chemicals produces a maximum energy that is the product of  the product of the energy of two chemicals. the energy values of the chemicals can be negative or positive. the scientist wishes to calculate the sum of the maximized energies of the two elements when the reaction happens.

Write an algorithm to find the total energy produced by the chemicals when the reaction happens.

input ------> size and array elements
con --------> no
output -----> max energy

sort the array

1st min: a[1-1] 1st max: a[n-1]
2nd min: a[2-1] 2nd max: a[n-2]
3rd min: a[3-1] 3rd max: a[n-3] and so on
formula: a[n-3]+a[2-1]

LBP166
------
Sales Report

a company has a sales record of N products for M days. 
The company wishes to know the maximum revenue received from a given product of the N products each day. 
Write an algorithm to find the higest revenue received each day.

input -----> space seperated integers N and M.
con -------> no
output ----> M space seperated integers representing the maximum received each day.

LBP167
------
Online Game

You are playing an online game. 
In the game, a numbers is displayed on the screen. 
In order to win the game, you have to count the trailing zeros in the factorial value of the given number. 
Write an algorithm to count the trailing zeros in the factorial value of the given number.

input ------> an integer num, representing the number displayed on the screen.
con---------> no
output -----> the count of trailing zeros in the factorial of the given number.

5!=120 -----> 1
6!=720 -----> 1
7!=5040 ----> 1
10!=3628800-> 2

LBP168
------
Array pliandrome

Implement a program to check whether an array is paliandrome or not.

input -----> Array size N and Array Elements
con -------> no
output ----> true or false

1 2 3 2 1 ===> true
1 2 3 4 5 ===> false

LBP169
-------
Array to Matrix

Implement a program to convert an array into matrix.

input -----> array size and elements
con -------> element count should be 1,4,9,16,25 and so on
output ----> matrix


LBP170
------
Matrix to Array
Implement a program to convert the given matrix into array

input -----> matrix of size mxn and elements
con -------> one D array is required
output ----> one-D array should be printed on screen


LBP171
------
Word Key

One programming language has the following keywords that cannot be used as identifiers. 
break,case,continue,default,defer,else,for,func,goto,if,map,range,return,struct,type,var

write a program to find if the given word is a keyword or not.

input ------> string from the user
con --------> no
output -----> true or false

LBP172
------
Oddly Even
Given a maximum of 100 digit numbers as input, find the difference between the sum of odd and even position digits.

input ------> a number from the user
con --------> no
output -----> an integer

LBP173
------
Sweet Seventeen
Given a maximum of four digit to the base 17(10=>A,11=>B,12=>C,13=>D,14=>E,15=>F,16=>G) as input, output its decimal value.

input -------> a string value
con----------> no
output ------> an integer value

LBP174

BeautifyMe
----------
The cosmetic company "BeauityMe" wishes to know the alphabetic product code from the product barcode. 
The barcode of the product is a numeric value and the alphabeitc product is a string value tagged 'a-j'. 
The alphabetic range 'a-j' represents the numeric range '0-9'. 
To produce the alphabetic product code. 
each digit in the numeric barcode is replace by the corresponding matching letters.

Write an algorithm to display the alphabetic product code from the numeric barcodes.

input ------> an integer value
con --------> no
output -----> a character 

LBP175
------
Print Prime Numbers
Implement a program to read a number and print prime numbers upto n seperated by commas.

input ----> a number from the user
con ------> no
output ---> comma seperated prime numbers

LBP176
------
GCD of two numbers

Implement a program to read two integers values and return GCD of two numbers.

input -----> two space seperated integers.
con -------> no
output ----> GCD of two numbers.

min common factor of two numbers

2 3 ===> 1 ====> 1
2 4 ===> 1,2 ==> 2
2 10 ==> 1,2 ==> 2

LBP177
------
secret information

A spy wants to send some secret information to the government. 
As the data is very important, he encrypts the message by encoding by adding some extra characters. 
the original message has only upper case letters and numbers, 
while the extra characters are madeup of lowercase letters and special characters. 
Can you help the receiver in designing a program that accepts the message and returns the secret information.

input ------> a string from the user
con --------> no
output -----> original message

extract only upper case letter and digits

LBP178
------
flight
amir is travelling to mumbai, but this time he is taking flight. 
His brother has already told him about luggage weight limits but forgot it.
Now he is taking with him 3 trolly bags.
As per the current airlines which amir will fly. has below weight limits.
There can be at max 2 check-in and 1 cabin luggage. Check-in has total limit of L1 and Cabin has limit of L2.

Now, amir has 3 luggage has weights as W1 and W2 and W3 respectively. Now he should be smart enough to make sure that he can travel with all the 3 luggage without paying extra charge.

Find out whether amir can take all of his luggage without any extra charges or not. If all good and no extra changes were paid, output "Yes" otherwise "No".

input ------> integers W1,W2,W3 and L1,L2
con --------> no
output -----> Yes or No

W1+W2+W3 <= L1+L2 Yes else No

LBP179
------
arrangement

given an array of size n, 
write a function to rearrange the numbers of the array in such that even and odd numbers are arranged alternatively in increasing order.

input -----> array size n and elements
con -------> no
output ----> updated array

LBP180
------
parity bits
Michael wants to check the parity of the given number. To find the parity, follow below steps.
1. convert decimal number into binary number.
2. count the number of 1's and 0's in the binary representation.
if it contains odd number of 1-bits, then it is "odd parity" and 
if contains even number of 1-bits then "even parity" 
Write a program to validate the given number belongs to odd parity or even parity.

input -------> a number from the user.
con ---------> no
output ------> odd parity or even parity.

5 ----> 0101 ---> 2 ---> even parity
8 ----> 1000 ---> 1 ---> odd parity

LBP181
-----
second non-repeating character

sofia loved to play with the programs unfortunately she got stuck in one of the questions. 
she tought to take help of james. 
james asked her the problem statement. 
The problem statement was.

"for the given string S of length N consist of stream of character not in predefined order. 
Write a program to find second non-repeating character in a string S. 
Write a program to help sofia and james for the given problem statements.

input ------> string from the user
con --------> no
outptu -----> single character

demo ---> e
welcome ---> l

LBP182
------
absolute difference between prime numbers

You are given an array of integers, N of size array length. 
Find the absolute difference (i.e. diff>=0) between the largest and smallest prime numbers.

Note:
	1. if there are 1 or fewer prime numbers in array return 0.
	2. the array may contain +ve and -ve numbers, ignore -ve numbers.
	3. 1 and 0 are not prime.

input ------> array size and array elements
con --------> no
output -----> absolute diff

LBP183
------
product with successor

Given an integer N and integer array A as the input, 
where N denotes the length of A 
write a program to find an integer the sum of all these product with successors.

input ----> array size and elements
con-------> no
output ---> an int value

LBP184
------
pre-sorted integers in array

You are given an array of integers, a of size n, 
Your task is to find the number of elements whose positions will remain unchanged after sorted in ascending order.

input ----> array size and elements
con ------> no
output ---> unchanged count

LBP185
------
savings

There are 3 friends named Ronaldo,Messi,Rooney who worked at a compnay. 
Given thier monthly salaries and monthly expendictures, returns the highest saving amoung them.

input ------> single line with 6 space seperated integers.
con --------> no
output -----> highest saving amoung the 3 of them

10 6 10 8 15 5

4
2
10

LBP186
------
half ascending and half descending

You are given a list of integers of size N, 
write an algorithm to sort the first half elements of the list in ascending order 
and the remaining elements in descending order.

input -----> an arry size and elements
con -------> no
output ----> updated array

LBP187
------
last and second-last
Given a string, create a new string made up of its last two letters, reversed and seperated by comma.

input ------> a string from the user
con --------> no
output -----> comma seperated last and second-last character

LBP188
------
digital root
Write a program to find the digital root of a given number. 
Digital root is the recursive sum of digits in the given number (until single digit is arrived)

input ----> a number from the user
con ------> no
output ---> single digit number

129 = 1+2+9 = 12
    = 1+2 = 3

LBP189
------
absolute difference
Write a program to find the absolute difference between the original number and its reversed number.

input -----> a number from the user
con -------> no
output ----> absolute difference

123-321=?

LBP190
------
lucky draw
A person went to an exhibition. 
A lucky draw is going on, where one should buy a ticket. 
And if they ticket number appear on the screen, that ticket will be considered as jackpot winner.

He knows the secret of picking up the ticket number, which will be considered for the jackpot.
1. sort the ticket number in the increasing order.
2. Now, the difference between the adjacent digits should not be more than 2.

If his ticket follows the above condition, then there are more chances to win the jackpot.

Given a ticket number, find whether the ticket is eligible to be part of jackpot or not. 
Print "Yes/No" based on the result.

input -----> ticket number
con -------> no
output ----> Yes or No

171 ---> 117 ---> 0,6 ----> No
123 ---> 123 ---> 1,1 ----> Yes

LBP191
------
test paper set

In an online exam, the test paper set is categorized by the letters A-Z. 
The students enrolled in the exam have been assigned a numeric value called application ID. 
To assign the test set to the student, firstly the sum of all digits in the application ID is calculated. 
If the sum is within the numeric range 1-26 the corresponding alphanetic set code is assigned to the student, else the sum of the digits are calcualted again and so on unitil the sum falls within the 1-26 range.

input ------> application id as int
con --------> no
output -----> set number

123=1+2+3=6 ---> F
A-1
B-2
C-3
D-4
E-5
F-6

>=1 && <=26

LBP192
-----
digits raised to the third power

Cristina appeared for a corporate Hackathon. 
She cleared first round of this and would like to take next challenge which is coding round. 
The problem statement comes to her is

Write a program to find numbers which are in between integer 2 and integer N and such that the sum of its digits raised to the third power is equal to the number with the input given.

input ----> integer N
con ------> no
output ---> an integer value

amstrong number -----> 153 ---> 1^3+5^3+3^3 = 1+125+27 = 153

LBP193
-------
Grocery Shop
There was a grocery shop. 
Shopkeeper would like to keep trasactions as simple as he can. .
Hence, he used to take money as whole number. 
To optimize trasactions, he decided if someone buys groceries from his shop, 
he will round money to the nearest whole number having zeros as last digit. 
Write a program to help shopkeeper to make trasactions much simple.

input -----> a number
con -------> no
output ----> nearest int value which ending with 0

45 ---> 50
51 ---> 60
80 ---> 80

LBP194
------
Password change
Prakash a technical person wants to update his password for every 15 days, to create a new password, 
he is converting all lower case letters to upper case and upper case letters to lower case, 
help prakash to update password. 

input ------> a string from the user old password
con --------> no
output -----> updated password

LBP195
------
Video share
Video share is an online video sharing platform. 
The company has decided to rate its users channels based on the sum total of the number of views received online and the subscribers. 
This sum total is referred to as user points. 
The rating will be given according to the below charts.

User points	rating
30-50		Average
51-60		Good
61-80		Excellent
81-100		Outstanding

input ------> points value
con --------> points>=30 and points<=100
output -----> rating

LBP196
------
modular exponentiation


Given three numbers b,e, and m. 
fill in a function that takes these three positive integer values and outputs 

b^e mod m.

input ------> b,e and m values
con --------> no
output -----> b^e mod m

LBP197
-----
Backspace String Compare
Two strings are said to the same if they are of the same length and have the same character at each index. Backspacing in a string removes the previous character in the string.

Given two strings containing lowercase english letters and the character '#' which represents a backspace key. determine if the two final strings are equal or not. Return 1 if they are equal else 0.

input -----> two strings s1 and s2
con -------> no
output ----> 1 or 0

Ex:

ab#c ----> ac
acr# ----> ac

1

LBP198
------
token number

Write an algorithm to generate the token number from the application ID by doing this modifications.

R1. If the digit is even add 1 to it.
R2. If the digit is odd sub 1 from it.


input -----> a number from the user
con--------> no
output ----> token number

12345
03254

LBP199
------
score of the player

a game developing company has developed a math game for kids called "Brain Fun". 
The game is for smartphone users and the player is given list of N positive numbers and a random number K. 
the player need to divide all the numbers in the list with random number k and then need to add all the quotients received in each division. the sum of all the quotients is the score of the player.

Write an algorithm to generate the score of the player.

input -----> array size, elements and random number k
con -------> no
output ----> an int value

LBP200
------
Perfect Math

Perfect math is an online math program. In once of the assignments the system displays a list of N number and a value K, and students need to calculate the sum of remainders after dividing all the numbers from the list of N numbers by K. The system need to develop a program to calcualte the correct answer for the assignment.

Write an algorithm to calcualte the correct answer for the assignment.

LBP201
-----
read and write matrix elements
Write a program to read matrix and display on the console.

input --------> a 3x3 matrix
constriants --> no
output -------> a 3x3 matrix

Logic:

for(i=0;i<r;i++){
	for(j=0;j<c;j++)
	{
		read
	}
}
for(i=0;i<r;i++){
	for(j=0;j<c;j++)
	{
		logic
	}
}
for(i=0;i<r;i++){
	for(j=0;j<c;j++)
	{
		write
	}
}

print res

LBP202
------
sum of all matrix elements

Write a program to find sum of all elements in the matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of all elements

LBP203
------
sum of all even elements
Write a program to find sum of all even elements in the matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of all even elements

LBP204
------
sum of all odd elements
Write a program to find sum of all odd elements in the matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of all odd elements

LBP205
------
sum of all prime elements

Write a program to find sum of all prime elements in the matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of all prime elements

LBP206
------
row wise sum in matrix
Write a program to find row wise sum in the matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of each row

LBP207
------
column wise sum in matrix
Write a program to find column wise sum in the matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of each column

LBP208
------
sum of diagonal elements in matrix
Write a program to find sum of diagonal elements in matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of diagonal elements

i==j

LBP209
------
sum of opposite diagonal elements in matrix

Write a program to find sum of opposite diagonal elements in matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of opposite diagonal elements

LBP210
------
sum of first and last element in the matrix

Write a program to find sum of first and last element in a matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> sum of first and last element in matrix

LBP211
------
find the product of diagonal matrix
Write a program to find the product of diagonal matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> find the product of diagonal matrix


LBP212
------
find the product of opposite diagonal matrix

Write a program to find the product of opposite diagonal matrix.

input --------> a 3x3 matrix
constriants --> no
output -------> find the product of opposite diagonal matrix


LBP213
------
max element in matrix

Implement a program to print max element in an matrix

input -----> a 3x3 matrix
constraint-> no
output ----> max element in matrix

LBP214
------
min element in matrix
Implement a program to print min element in an matrix

input -----> a 3x3 matrix
constraint-> no
output ----> min element in matrix

LBP215
------
max element in each row of a matrix
Implement a program to print max element in each row of a matrix

input -----> a 3x3 matrix
constraint-> no
output ----> print max element in each row of a matrix

LBP216
------
min element in each row of a matrix
Implement a program to print min element in each row of a matrix

input -----> a 3x3 matrix
constraint-> no
output ----> print min element in each row of a matrix

LBP218
------
trace of the given matrix
Implement a program to find trace(sum of diagonal elements) of the given matrix.
input -----> a 3x3 matrix
constraint-> no
output ----> print trace of the matrix

if i==j
s=s+a[i][j]
print s

LBP217
------
Implement a program to print transpose of a matrix

Input Format
a 3x3 matrix
Constraints
no

Output Format
print transpose of the matrix
Sample Input 0
1 2 3
4 5 6
7 8 9
Sample Output 0
1 4 7
2 5 8
3 6 9


LBP218
------
trace of the given matrix
Implement a program to find trace(sum of diagonal elements) of the given matrix.

input -----> a 3x3 matrix
constraint-> no
output ----> print trace of the matrix

LBP219
------
find the frequency of odd and even
Write a program to find frequency of odd and even elements in the matrix excluding 0.

input ------> a 3x3 matrix
constraint -> no
output -----> odd elements and even elements count

LBP220
------
identity matrix
Implement a program to check whether the given matrix is identity matrix or not

input -------> a 3x3 matrix
constraint --> no
output ------> Yes or No

1 0 0
0 1 0    ----> Yes
0 0 1

1 2 3
4 1 5   ----> NO
6 7 1

for(i=0;i<3;i++){
	for(j=0;j<3;j++){
		if(i==j && a[i][j]!=1)
			flag=0;
			break;
		if(i!=j && a[i][j]!=0)
			flag=0;
			break;
	}
}

if flag==1 then print Yes else print No

LBP221
------
two matrices are equal or not
Implement a program to check whether the given matrices are equal or not

input -------> a 3x3 matrix
constraint --> no
output ------> Yes or No

Ex1:
1 2 3
4 5 6
7 8 9

1 2 3
4 5 6
7 8 9

Yes

Ex2:
1 2 3
4 5 6
7 8 9

1 2 3
4 5 6
7 8 1

No

9 elements

flag=1;
for(i=0;i<3;i++){
	for(j=0;j<3;j++){
		if(a[i][j]!=b[i][j]){
			flag=0;
			break;
		}
	}
}
if flag==1 then Yes else No

LBP222
------
addition of two matrices
Write a program to perform addition operation on two matrices
input --------> two 3x3 matrices
constraint----> no
output -------> resultent matrix

c[i][j]=a[i][j]+b[i][j]

LBP223
------
subtraction of two matrices
Write a program to perform subtraction operation on two matrices

input --------> two 3x3 matrices
constraint----> no
output -------> resultent matrix

c[i][j]=a[i][j]-b[i][j]

LBP224 
------
multiplication of two matrices

Write a program to perform multiplication operation on two matrices

input --------> two 3x3 matrices
constraint----> no
output -------> resultent matrix

for(i=0;i<2;i++){
	for(j=0;j<2;j++){
		c[i][j]=0;
		for(k=0;k<2;k++){
			c[i][j]=c[i][j]+(a[i][k]*b[k][j]);
		}
	}
}

LBP225
------
sort all the elements in a matrix in asc order

Implement a program to sort all the elements in asc order in the matrix

input -------> a matrix
cons---------> no
output ------> result matrix


LBP226
------
sort all the elements in a matrix in desc order

Implement a program to sort all the elements in desc in the matrix

input -------> a matrix
cons---------> no
output ------> result matrix

LBP227
------
sort all the elements in a row in asc order
Implement a program to sort all the rowwise elements in asc order
input -------> a matrix
cons---------> no
output ------> result matrix

LBP228
------
sort all the elements in a row in desc order
Implement a program to sort all the row wise elements in desc order

input -------> a matrix
cons---------> no
output ------> result matrix

LBP229
------
sort all the elements in a column in asc order
Implement a program to sort all the column values in asc order

input -------> a matrix
cons---------> no
output ------> result matrix

LBP230
------
sort all the elements in a column in desc order
Implement a program to sort the all the column values in desc order

input -------> a matrix
cons---------> no
output ------> result matrix

LBP231
------
sparse matrix
Implement a program to check whether the given matrix is sparse matrix or not.
Note: a sparse matrix is a matrix with the majority of its elements equal to zero.

input---------> a matrix
con ----------> no
output -------> Yes or No

3X3 ===> 9 ELEMENTS ----> 9/2 ---> number of zeros>=5

logic:

counter=0;
------
------
------
if counter>=5 then Yes else No

LBP232
------
swaping of two rows
Implement a program to swap two given rows.
input -------> matrix and m and n values
con ---------> no
output ------> modified matrix

11 22 33 
44 55 66
77 88 99
m=1
n=2

LBP233
------
swaping of two columns
Implement a program to swap two given columns

input -------> matrix and m and n values
con ---------> no
output ------> modified matrix

LBP234
------
interchange the diagonals
Program to accept a matrix of order 3x3 & interchange the diagonals.

input -------> a 3x3 matrix 
con ---------> no
output ------> modified matrix

1 5 9
1 2 3
4 5 6

9 5 1
1 2 3
6 5 4

44 55 66
11 22 33
77 88 99

for i=0,i<3;i++

t=a[m-1][i]
a[m-1][i]=a[n-1][i]
a[n-1][i]=t

LBP235
------
upper triangular matrix
Program to accept a matrix and check whether it is upper triangular matrix or not
input -------> a 3x3 matrix 
con ---------> no
output ------> Yes or No

1 2 3
4 5 6   ----> No
7 8 9

1 2 3
0 5 6
0 0 9

LBP236
------
lower triangular matrix
Program to accept a matrix and check whether it is lower triangular matrix or not

input -------> a 3x3 matrix 
con ---------> no
output ------> Yes or No

LBP237
------
Scalar matrix multiplication
Implement a program to read a matrix and multiplier and return scalar matrix multiplication.

input -------> a 3x3 matrix and multiplier
con ---------> no
output ------> resultent matrix

LBP238
------
Symmetric matrix

Implement a program to read a matrix and check whether the given matrix is symmertric matrix or not

input -------> a 3x3 matrix 
con ---------> no
output ------> Yes or No

LBP239
------
print diagonal elements
Implement a program to read a matrix and display only diagonal elements.

input -------> a 3x3 matrix 
con ---------> no
output ------> print only diagonal elements

LBP240
------
Square of Each Element of Matrix
Implement a program to find square of each element present in a matrix.

input -------> a 3x3 matrix 
con ---------> no
output ------> resultent matrix

LBP241	
------
Sum of even indexed rows in matrix
Implement a program to find sum of even indexed rows in the given matrix.

input ------> a 3x3 matrix
con --------> no
output -----> sum as an int

0===> ----
1===> xxxx
2===> ----

for(i=0;i<3;i++){
	for(j=0;j<3;j++){
		if(i%2==0){
			s=s+a[i][j];
		}
	}
}

LBP242	
------
Sum of odd indexed rows in matrix
Implement a program to find sum of odd indexed rows in the given matrix.

input ------> a 3x3 matrix
con --------> no
output -----> sum as an int

LBP243	
------
Sum of even indexed cols in matrix
Implement a program to find sum of even indexed cols in the given matrix.

input ------> a 3x3 matrix
con --------> no
output -----> sum as an int

LBP244	
------
Sum of odd indexed cols in matrix
Implement a program to find sum of odd indexed cols in the given matrix.

input ------> a 3x3 matrix
con --------> no
output -----> sum as an int

LBP245	
------
Sum of elements whose sum of row index and col index is even
Implement a program to find sum of row index and col index is even in the given matrix.

input ------> a 3x3 matrix
con --------> no
output -----> sum as an int

(i+j)%2==0

LBP246	
------
Sum of elements whose sum of row index and col index is odd
Implement a program to find sum of row index and col index is odd in the given matrix.

input ------> a 3x3 matrix
con --------> no
output -----> sum as an int

LBP247	
------
Sum of elements whose sum of row and col is prime

Implement a program to find sum of row index and col index is prime in the given matrix.

input ------> a 3x3 matrix
con --------> no
output -----> sum as an int

LBP248	
------
Count of prime digits in the given matrix
Implement a program to count number of prime digits present in the matrix.

input ------> a 3x3 matrix
con --------> no
output -----> prime digits count

LBP249	
------
Reverse of each element in matrix
Implement a program to reverse each element in the matrix.

input ------> a 3x3 matrix
con --------> no
output -----> result matrix

LBP250	
------
Keep paliandrome number and replace remaining with 0's.
Implement a program to keep all paliandrome numbers as it is and replace remaining with 0.

input ------> a 3x3 matrix
con --------> no
output -----> result matrix

LBP251	
------
multiples of 10
Given an array A of N integer  numbers. 
The task is to rewrite the array by putting all multiples of 10 at the end of the given array.

Note: The order of the numbers which are not multiples of 10 should remain unaltered, and similarly. 
the order of all multiples of 10 should be unaltered.

input ------> N and Array Elements
con --------> no
output -----> updated array


LBP252	
------
Employee's Rating Point
In a company, an employee's rating point (ERP) is calculated as the sum of the rating points given by the employee's manager and HR. The employee rating grade (ERG) is calculated according to the ERP ranges given below.

ERP	ERG
30-50	D
51-60	C
61-80	B
81-100	A

Write an algorithm to find the ERG character for a given employee's ERP.

input -------> an integer value 
con ---------> con
output ------> employee rating grade

LBP253
------
encrypted digits
A company trasfers an encrypted code to one of its clients. 
The code needed to be decrypted so that it can be used for accessing all the required information. 
The code can be decrypted by interchanging each consecutive digit and once if the digit got interchanged then it cannot be used again. 
If at a certain point there is no digits to be interchanged with, then that single digit must be left as it is.

Write an algorithm to decrypt the code so that it can be used to access the required information.

input ------> a number from the user
con --------> no
output -----> an integer value

LBP254
------
Easy Shopping
The e-commerce company 'Easy Shopping' displays some specific products for its premium customers on its user interface. 
The company shortlisted a list of N products. 
The list contains the price of each product. 
The company will select random products for display. 
The selection criteria states that only those products whose price is a perfect cube number will be selected for display. 
The selection process is automated and is done by the company's system.
The company wishes to know the total count of the products selected for display.

Write an algorithm to find the count of products that will be displayed.

input ----> an array size and elements
con ------> no
output ---> perfect cube elements

LBP255
------
player's score

In a game, organizers has given a number to the player. 
The player has to find out the differnece between the number and the reverse of the number. 
The difference between two numbers is the player's score. 
The number given to the player and the player's score can be a negative or positive number.

Write an algorithm to find the player's score.

input ------> an integer 
con --------> no
output -----> player's score

n-rev(n)

LBP256
-------
GlobalAdd

The media compnay "GlobalAdd" has received a batch of advertisements from different product brands. 
The batch of advertisements is a numeric value where each digit represnets the number of advertisements 
the media company has received from different product brands. 
Since the company banners permit only even numbers of advertisements to be displayed, 
the media company needs to know the totoal number of advertisements it will be able to display from the given batch.

Write an algorithm to calculate the total number of advertisements that will be displayed from the batch.

input -----> an integer
con -------> no
output ----> count of advertisements

12345 ===> 2,4 ===> 2

LBP257
------
FunGames

The games development company "FunGames" has developed a ballon shooter games. 
The ballons are arranged in a linear sequence and each ballon has a number associated with it. 
The numbers on the ballons are fibonacci series. (0,1,1,2,3,5,8,....)
In the game the player shoots 'k' ballons. 
The player's score is the sum of numbers on k ballons.

Write an algorithm to generate the player's score.

input ----> an integer vlaue n
con ------> no
output ---> sum value

n=1 ---> 0
n=2 ---> 0+1=1
n=5 ---> 0+1+1+2+3=7

LBP258
------
The Past Book

To create a profile on a scocial media account "ThePastBook". 
The user needs to enter a string value in the form of user name. 
The username should consist of only characters tagged a-z. 
if  the user enters an incorrect string containing digits the system automcatically identifies the number of digits in the string and removes them.

Write an alogorithm to help the system identify the count of digits present in the username.

input -----> A string from the user.
con -------> no
output ----> count of digits

count number of digits in the given string.

LBP259
------
Morning Prayer
Student of a school are assembled in a straight line for the morning prayer. 
To uplift the sprit of the students, an exercise is conducted. 
THe initial letter of all the student's names is noted down(str). 
The task here is to substitute the intitial letters in the list with consonants such that if the initial letter of the student is a vowel, retain the student in the same position.

If the initial letter of the student is a consonant, swap with the next immediate consonants from the english alphabet sequence (a-z). 
Say, initial letter of a student starts with b swap with c, next immediate consonant. 
If the initial letter is 'z' swap with 'b'.

input -----> a string from the user
con -------> no
output ----> updated string

abcde ---> acdfe
prakash ----> qsalatj
qsalatj

LBP260
------
factorial game
Mikes likes to play with numbers. 
His friends are also good with numbers and often plays mathematical games. 
they made a small game where they will spell the last digit of a factorial of a number other than 0.

Let say the given number is 5, 
so 5! will be 120, Here 0 is the last digit. 
But we dn't want 0, we want a number other than 0. 
Then last digit is 2.

input ----> an integer value
con ------> no
output ---> an integer vlaue

LBP261
------
Speed Maths
Jack was in 9th standard. 
He appeared for a speed maths competivie exam. 
Jack is taking longer time to solve one of the problems. 
Count the number of 1's in the binary representation of an integer. 
Help him to solve the below problem and write a code for the same.

input ------> an integer value
con --------> no
output -----> an int value

int ----> binary number ----> count 1's

LBP262
------
puzzle

Dennis was solving a puzle. 
the puzzle was to verify a number whose cube ends with the number itself. 
Help Dennis to find the solution of the puzzle and write the code accordingly.

input --------> integer value to verified
con ----------> no
output -------> boolean value True or False

LBP263
------
mathematics class
In a mathematics class, number system is being taught to students, 
before teaching them 10's and 100's place, they will be taught the number positions. 
The positions will be starting from sequence number 1 and the direction will be from left to right.

So if i want to find second position of a digit in the number 90876, it will be 0. 
if the kth digit exceeds the number position return -1.

write a program to find the kth digit in a given number.

input -----> integer value and kth digit
con -------> no
output ----> an integer number

LBP264
------
power function
In a mathematics class, the students are beign taught power function. 
So "a" raised to the power of "b" is shown as a^b and the calculatation goes as a*a*a...b times. 
Now there is slight twist to the problem, the students have to find out the last digit of the resultant a^b. 

input -----> an integer value as base and power
con -------> no
output ----> last digit of a^b

a^b xyz print z

LBP265
------
mathematical tricks
Aryan is studying in the 5th standard. 
He is very interested in mathematical tricks and always wanted to play with numbers. 
Aryan would like to replace existing numbers with some other numbers. 
Today he decided to replace all digits of the number (which is greater than or equal to 2 digits) by its squares and print it in reverse order. 
Write a program to help him to replace numbers accordingly.

input -----> a number
con -------> no
output ----> replaced all digits by its squares and revered number

LBP266
-------
coding standards
Tom has joined a new company and he is assigned a program to code. 
But before starting to code, he needs to know the coding standards. 
He need to make sure that the variable name should meet the below standards, 

=> contains only english letter
=> and/or digits
=> and/or underscore (_)
=> should not start with digits

The program should return True/False based on the above conditions

input ----> a string from the user
con ------> no
output ---> true or false

LBP267
------
party quiz

While sitting in party, 
Tom came up with an idea of a quiz. 
and the quiz is, Tom will spell out a number, and a person has to tell a number which is next to it. 
But this number has to be perfect square.

input -----> a number from the user
con -------> no
output ----> the perfect square after N

LBP268
------
Be Positive 
Write a program to get two inputs from the user and find the absolute difference between the sum of two numbers and the product of two numbers.

input ------> two numbers from the user
con --------> no
output -----> absolute difference 

LBP269
------
Prime Number Busses
James wants to travel by bus to reach his friend John's home. 
John gave a hint that all busses from Jame's location will reach his home if the bus number is prime number.
Write a program to help James find the bus that reaches John's home.

input -----> a number from the user
con -------> no
output ----> yes or no

LBP270
------
sentence making

The teacher in a school has started to teach the very basics rule for a sentence is that 
it should start with a capital letter and ends with a full stop. 
If the sentence fails any of the above mentioned criteria, it will be an incorrect sentence.
Make a program to validate whether a given statement is a correct sentence or not. 
The program should return True/False based on the validity.

input -----> a string from the user
con -------> no
output ----> true or false

LBP271 
------
Single Binary Value
Geetha Singh is trying to create a system to convert binary number to its decimal eqivalent. 
Help her to automate the process.

input -----> a binary value
con--------> no
output ----> decimal value

LBP272
------
Item id
A company wishes to bucketize their item id's for better search operations. 
The bucket for the item ID is chosen on the basis of the maximum value of the digit in the item ID. 
Write an algorithm to find the bucket to which the item ID will be assigned.

input -----> ItemId
con -------> no
output ----> bucket ID

LBP273
------
Next Letter
Implement the following function
def NextLetter(ch1,ch2);

The function accepts two characters ch1 and ch2 as arguments, ch1 and ch2 are alphabetical letters. 
Implement the function to find and return the next letter so that distance between ch2 and the next letter is the same as the distance between ch1 and ch2. 
While counting distance if you exceed thhe letter 'z' then, 
count the remaining distance starting from the letter 'a'.

Distance between two letters is the number of letters between them.

input ------> char ch1 and char ch2
con --------> no
output -----> char ch

LBP274
------
Sum of All Integers
Implement a program to find sum of all integers between two integer numbers taken as input and are divisible by 7.

input ------> an integer value
con --------> no
output -----> sum value

s=0;
for(int i=N1;i<=N2;i++)
{
	if(i%7==0)
		s=s+i;
}
print s

LBP275
-------
Country Visa Center
The country visa center generates the token number for its applicants from their application ID. 
the application ID is numberic value. 
The token number is generated  in a specific form. 
the even digits in the applicant's ID are replaced by the digit one greater than the even digit 
and the odd digits in the applicant's ID are replaced by the digit one lesser than the odd digit. 
The numeric value thus generated represents the token number of applicant.

Write an algorithm togenerate the token number from the applicant ID.

input -----> application ID
con -------> no
output ----> token id

12345 ===> 03254
rev ---> logic

LBP276
------
Neon Number
Rahul's teacher gave an assignment to all the student that when they show up tomorrow they should find a special type of number and report her. He thought very carefully and came up with an idea to have neon numbers. 
A neon number is a number where the square of the sum of each digit of the number results in the given number.
Given an integer  N, 
Write a program to find whether the number N is a Neon number. 
If it's not a Neon number, print the sqaure of the sum of digits of the number.

input -------> a number
con ---------> no
output ------> true or false

81=> 8+1=9^2=81 ---> neon

LBP277
------
super market pricing

A super market maintains a pricing format for all its products. 
A value N is printed on each product. 
When the scanner reads the value N on the item, 
the product of all the digits in the value N is the price of the item. 
the task here is to design the software such that given the code of any item N the product (multiplication) of all the digits of value should be computed (price).

input ----> an integer value
con ------> no
output ---> price

123 ===> Rs. 1*2*3=6/-

LBP278
------
Number Container
Given two positive numbers N and K. 
The task is to find the nunber N containers exactly K digit or not. 
If contains then print 
True<space>digit_count otherwise False<space>digit_count.

input ----> Value of N and K
con ------> con
output ---> True|False<space>Digit_Count

LBP279
------
pronic number
A pronic number is a number which is a product of two consecutive integers, that is, 
a number of the form n(n + 1). 
Create a function that determines whether a number is pronic or not.

input------> a number from the user
con -------> no
output ----> true or false

LBP280
------
Validate ATM PIN
Implement a program that will test if a string is a valid PIN or not via a regular expression.
A valid PIN has:

Exactly 4 characters.
Only numeric characters (0-9).
No whitespace.

input ----> an input from the user
con ------> con
output ---> true or false


LBP281
------
The Actual Memory Size of Your USB Flash Drive
Implement a program that takes the memory size as an argument and returns the actual memory size.
Note: The actual storage loss on a USB device is 7% of the overall memory size!

input -----> memory size in GB
con -------> no
output ----> actual memory size, round your result to two decimal places.

1GB ===> 0.93GB

LBP282
------
Happy Number
The happy number can be defined as a number which will yield 1 when it is replaced by the sum of the square of its digits repeatedly. 
If this process results in an endless cycle of numbers containing 4, then the number is called an unhappy number.

Write a program that accepts a number and determines whether the number is a happy number or not. Return true if so, false otherwise.

input -----> a number from the user
con -------> no
output ----> true or false

32=9+4=13=1+9=10=1+0=1
16=1+36=37=9+49=58=25+64=89=....4

LBP283
------
Calculate the Mean
Implement a function that takes an array of numbers and returns the mean (average) of all those numbers.

input ----> an array size and elements
con ------> no
output ---> print mean value and round to two decimal places.

avg = sum of elements / number of elements

LBP284
------
Factorize a Number
Implement a program to that takes a number as its argument and returns an array of all its factors
input -----> a number
con -------> no
output ----> list of factors

LBP285
------
Next 5 characters
Implement a program to display next 5 characters after input character.

input -----> a character from the user
con -------> no
output ----> next 5 characters exluding input

LBP286
------
Composite Number
Implement a program to check whether the given number is composite number or not.
input ----> a number from the user
con ------> no
output ---> true or false

Hint: if we have more than 2 factors (not prime)

LBP287
------
Hot and Cold Numbers

Immplement a program, it reads integers from the input device(until it gets -ve number) and put them into array. We define a hot number as any number whose last digit is 2, and cold number as any number that is less than 50. You have to modify the program such that

if it is hot number replace by -1
if it is cold number replace by -5
if it is both hot and cold replace by -6
else keep old number

input -----> a sequence of int values
con -------> no
output ----> a sequence of int values

LBP288
-------
Not Having Alphabet 'a'

Write a program to check whether a string not having alphabet 'a'?

input --------> string from the user
con ----------> con
output -------> true or false

LBP289
------
MathAtTip
The online math course provider 'MathAtTip' has designed a course for children called Learning Number Recognition and Coutning. The assessment part of the course has a question where the student is given a number and a digit. The student needs to find out the total count of the digits present in the number excluding the given digit.

input ------> two space seperated int values
con --------> no
output -----> count of total digits excluding k

LBP290
------
TodaysApparel
The e-commerce company "TodaysApparel" has a list of sales values of N days. Some days the company made a profit, represented as a positive value. Other days the company incurred a loss, represented as a negative sales value. The company wishes to know the number of profitable days in the list.
Write an algorithm to help the company know the number of profitable days in the list.

input -------> array size and elements
con ---------> no
output ------> count number of +ve values

LBP291
------
BucketId
A data company wishes to store its data files on the server. They N files. Each file has a particular size. the server stores the files in bucket list. The bucket ID is calculated as the sum of the digits of its file size. The server.. the bucket ID for every file request where the file is stored.

Write an algorithm to find the bucketIDs where the files are stored.

input -----> an array size and elements
con -------> no
output ----> bucketIds

LBP292
------
Decimal to Octal
Implement a program to convert the given decimal value into octal

input ------> decimal value
con --------> no
output -----> octal number

LBP293
------
sum of adjacent elements.
Implement a program to find sum of adjacent elements in the array.

input ----> an array size and elements
con ------> no
output ---> array with sum of adjacent elements

LBP294
------
Vaccination Drive List Preparator
Currently government is taking lot of measures to control the spread of Coronavirus. As we have vaccine now, many campaigns are done to vaccination.
Health dept is identifying the people in each area and recommended/vaccination of them. They are planning three stages

stage1: above 60 years
stage2: between 18 and 60
stage3: below 18 years

Implement a program to read date of birth of the person and decide he belong to which stage.

input -----> date of birth 
con -------> no
output ----> 1 or 2 or 3

LBP295
------
Area of the circle
Implement a program to find the area of the circle
input -----> radius value
con -------> no
output ----> area of the circle (round to two decimals)


LBP296
------
Divisible by 5 or 7
Implement a program to print the list of integers which are divisible by 5 or 7.

input ----> a number from the user
con ------> no
output ---> seq of int values which are divisible by 5 or 7

LBP297
------
ending 3
Implement a program to print the list of integers which are ending with 3 in the given range.

input -----> n1 and n2 values
con -------> no
output ----> list of int values

LBP298
------
Min and Max
Implement a program to find absolute diff between sum of max digits and sum of min digits present in three integers n1,n2 and n3

input -----> n1,n2 and n3
con -------> no
output ----> int value

LBP299
------
Lucky String
Write a program to find whether the given string is lucky or not, 
A string is said to be lucky if the sum of ascii values of the characters in the string is even.

input ------> a string
con --------> non empty string
output -----> true or false

LBP300
------
Last three digits
Implement a program to find sum of last three digits in the given number.

input ------> an int value
con --------> must be three digit number
output -----> int value

LBP301
------
Reverse and Replace
Given String/Sentence need to be reversed and the vowels need to be replaced with numbers from 1-9 in the reversed string replaced number should be appears in desending order from left to right. 
If there are more than 9 vowels, numbering should restart from 1.

input -------> a string from the user
output ------> reversed string
constraint---> length of string should be <50 otherwise display invalid input.

LBP302
-----
party
A party has been organized on cruise.The party is organized for a limited time(T). The number of guests entering E[i] and leaving L[i] the party at every hour is represented as elements of the array. the task is to find the total number of guests present on the curise at the end.

input -------> size and two arrays
con ---------> no
output ------> an int value

LBP303
------
Airport Security

Airport Security officials have confiscated several items of the passenger at the security checkpoint. 
All the items have been dumped into a huge box(array). 
Each item possessed a certain amount of risk(0,1,2). 
Here is the risk severity of the item representing an array[] of N number of integer values. 
The risk here is to sort the item based on thier level of risk values range from 0 to 2.

input ------> size and elements
con --------> no
output -----> sorted array

LBP304
------
chocolate factory
A chocolate factory is packing chocolates into the packets. 
The chocolate packets here represent an array arr of n number of integer values. 
The task is to find the empty packets(0) of chocolate and push it to the end of the conveyor belt(array).

input------> size and array elements
con -------> no
output ----> rearranged array

LBP305
------
digital logic
Joseph is learning digital logic subject which will be for his next semester. 
He usually tries to solve unit assignment problems before the lecture.
Today he got one tricky question.
The problem statement is "A positive integer has been given as an input.
Convert decimal value to binary representation. 
Toggle all bits of it after the most significant bit including the most significant bit. 
Print the positive integer value after toggle all bits.

input -----> an int value
con -------> no
output ----> another dec value

10 ===> 1010 ===> 0101 ===>5

LBP306
------
Security Key

A company is transmitting data to another server. The data is in the form of numbers. To secure the data during transmission, they plan to obtain a security key that will be sent along with the data. The security key is identified as the count of the repeating digits in the data. Write a algorithm to find the security key for the data.

input -------> The input consists of an integer data, representing the data to be transmitted.
output ------> print an integer representing the security key for the given data. if no data is repeated it should display -1
con ---------> no

LBP307
------
Data Encode

A company wishes to encodes its data. the data is in the form of a number. They wish to encode the data with respect to a specific digit. They wish to count the number of times the specific digit reoccurs in the given data so that they can encode the data accordingly. Write an algorithm to find the count of the specific digit in the given data.

input -----> the input consists of two space seperated integers -data and digit, representing the data to be encoded and the digit to be counted in the data.
con -------> no
output ----> print an integer representing the count of the specific digit.

LBP308
------
One Time Password

An e-commerce site wishes to enhance its ordering process. 
They plan to implement a new scheme of OTP generation for order confimations. 
The OTP can be any number of digits. for OTP generation, 
the user will be asked for two random numbers where first number is always smaller than second number. 
The OTP is calculated as the sum of the maximum and minimum prime values in the range of the user-entered numbers. Write a program to generate OTP.

input----> two int values
con------> fn<sn
output --> sum of max and min prime numbers.

n1 and n2
n1--->nextPrime() ---> min
n2--->beforePrime() --> max

LBP309
------
Nearest paliandrome

Write a program to find nearest greater paliandrome 

input -----> an int value
con -------> no
output ----> an int value

LBP310
------
FizzBuzz
Given a number n, for each integer i in the range from 1 to n inclusive, print one value per line as follows.

=> if i is a multiple of both 3 and 5 print FizzBuzz
=> if i is a multiple of 3 (but not 5), print Fizz
=> if i is a multiple of 5 (but not 3), print Buzz
=> if i is not a multiple of 3 or 5 print the value of i.

implement a program to read number n print the output as described above.

input ------> a number n
con --------> no
output -----> print n string as per the above rules.







































































