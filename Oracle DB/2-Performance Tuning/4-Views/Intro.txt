Intro
=====
-RDMS provides a high degree of data abstractions.
-It is simply not possible to determine the exact location on the HDD the RDBMS is putting each row of a table.
-From the SQL Perspective, Oracle allows creating a view. View is a way of building even higher level of data abstractions.

Data Abstraction
================
-It is usually required after a table is created and populated with data.
-Data held by some tables might require restricted access to prevent all users from accessing all columns of a table, for data security reasons.
-Such security issues can be addressed by creating several tables with apporiate columns and assigning specific users to each such table, as required. this answer the data security requirement very well but give rise to a great deal of redundant data being resident in tables, in the DB.
-To reduce redundant data to minimum possible, oracle provides using virtual tables which are views.

Which is A View?
================
-A View is a virtual table based on the result returned by a SELECT query. The contnet of which is taken from table with the help of a query.
-The most basic purpose of a view is restricting access to specific column/rows from a table thus allowing diff user to see only certain rows or columns of table.
-In terms of usage, a view behaves just as the actual table. Hence, a view can be queried exactly as though it was an actual table.

View are slower
---------------
-A query fired on a view will run slower than a query fired on a based table.
-This is because every time a query is fired, oracle retrieves the view definitions from its system catalog.
-Once the definition is retrieved , the base tables are identified and openend in the memory.
-the view is then constructed on top of the base tables(s). only then will the query in the view definitions actually executed and returns the required data.

Composition of view
-------------------
-A View is composed of rows and columns, very similar to tables. the fields in a view are fields from one or more database tables in the DB.

View Storage
------------
-

A view is not a part of the physical schema like other ordinary tables, it is a dynamic, virtual table computed or collated from the data available in the DB. Changing the data in a base tables alters the data shown by the view.
-Oracle does not store the view data.
-A view is stored only as definition in oracle system catalog. When a reference is made to a view, its definitions is scanned, the base table is opened and the view is created on top of the base tables.

Kind of Views
*-----------*
-View can be read-only or updatables
-View that do not allow INSERT,UPDATE and DELETE operations are known as Read-Only views. 
-When an updatable view is used to manipulate table data, the underlying base table is completely invisible as that user is not given rights to actual base tables but is onl given to rights to the view. this therefore gives the level of data security required.

Advantages of View
------------------
Security:-
Each user can be given persmission to access only a set of views that contains specific data
Query Simpliclity :- 
A view can draw data from several diff tables and present it as a single table turning mutliple tables queries into single table queries against the view
Structural Simplicity:-
View can give the user a perzonalized view of the db strucutre presenting DB as a set of virtual tables that makes sense for that users
Data Integrity:-
If data is accessed and entered through a view, the DBMS can automatically check the data to ensure that it meets specified integrity constraints

Dis-Advantages of View
----------------------
-Performance :-
View only create the appearence of the table but the RDBMS must still translate queries against the views into queries against the underlined source tables, if the view is defiend ona complex multiple tables query then even a simple query against the view becomes a complicated join and takes a long time execute
Update Restrictions:-
When a user tries to updates rows of a view, the DBMS must tranaslate the request into the update on the rows of the underlined source tables.

Creating View
*-----------*
-A View after it is created can be used from inside an SQL query, a stored procedure or from inside another view

Syntax:-
	CREATE VIEW <ViewName> AS
		SELECT <ColumnName1>,<ColumnName2>,<ColumnName3> FROM <TableName>
			WHERE <ColumnName>=<Expression List>
				GROUP BY <Grouping Criteria> HAVING <PREDICATE>;

*Order by clause cannot be used while creating the view
-View helps protecting privacy and source code.

Privacy protecting Using Views
-----------------------------
-The most common purpose of using a view is to protect confidential data.


Read-Only Views
*----------------*

syntax
	SELECT <ColumName1>,<ColumnName2> from <ViewName>;


Updateables Views
*----------------*

without joins
----------
-Views can also be used for manipulating the data that is available in the base tables[i,e the users can perform the insert, update and delete operations].
-Views on which data manipulation can be done are called updateable views.
-if an inser, update or delete SQL statement is fired on a view, modification to data in the view are passed to the underlying based tables
-For a view to be updateable, it should meet the following criteria
1)View defined from single table.
2)If the user wants to INSERT records with the help of a view, then the PRIMARY KEY columns and all the NOT NULL must be included in the view
3)the user can UPDATE, DELETE records with the help of a view even if the PRIMARY KEY column and NOT NULL are excluded from the view definitions.

With joins
----------
-Aggregate functions
-DISTINCT,GROUP BY or HAVING Clause
-Sub-queries
-Constants, String or Value expression like Order*1.2
-UNION, INSERSECT or MINUS clause
-if a view is defined from another view, the second view should be updateable.

-if the users tries to perform any of INSERT, UPDATE, DELETE operations, on a view, which is created from a non-updateable view oracle returns the following error message

ORA-1732 : Data manipulation operations not legal on this view.

Re-Creating a View
*----------------*
-to Recreate a view without destroying it, the following syntax can be used

Syntax:
	CREATE OR REPLACE VIEW <ViewName> AS
		SELECT <ColumnName1>,<ColumnName2> FROM <TableName>
			WHERE <ColumName>=<Expression List>
				GROUP BY <Grouping Criteria> HAVING <Predicate>;

Destroying a View
*----------------*
-The DROP VIEW command is used to destroy a view from the database

syntax
	DROP VIEW <ViewName>;


Materialized View
=================
-In normal view, when a SQL query fired oracle locates the actual definitions and extracts the appropriate data from underlying base tables.
-A Materizlied view takes and different approach in which the query result is cached as a concrete table that may be updated from the orginal base tables from time to time.
-It is also used to build the data abstraction but it holds data, they consume disk space
-it does not contain up-to-the minute informations.
-the refresh intervals at which the materialized view will automatically be refreshed can be controlled.
-it is the database object that contains the results of a query unlike normal views that only contains the query definitions and not the results
-Materized views are usually a choice when creating summary tables based on aggregations of a table's data
-it can be used query tables, views and other materizlied views.
-the commonly create materialized views are
1)Primary key
2)RowID
3)Subquery

syntax
	CREATE MATERIALIZED VIEW <Schema.name>
		REFRESH[FAST|COMPLETE|FORCE][ON DEMAND|COMMIT]
		START WITH DATE
		NEXT DATE
		WITH [PRIMARY KEY | ROWID]

where
REFRESH:-
-since the materialized view bulit underlying data that is periodically changed, specify how and when to refresh the data in teh view. The following keywords in the REFRESH Clause can also be create a schedule for recurring refresh operations.
	*FAST: update only the values in the materizlied view, assuming that some preconditions are met
	*COMPLETE:Recreates the view completely
	*FORCE: Does a FAST Refresh if possible and a COMPLETE refresh if the preconditions for a FAST refresh are not 		available.
	*ON COMMIT: causes a refresh to occur whenever the underlying data is changed and the change is committed.
	*ON DEMAND:Performs a refresh when it is schedule or explicity called

START WITH DATE:-
-Indicates the time and interval at which materialized view is to be refreshed

NEXT DATE:-
-Indicates the time and interval at which the materizlied view is to be refreshed next.

WITH PRIMARY KEY:-
-Indicates whether the materizlied view is based on Primary key

WITH ROWID:-
-Indicates whether the materizlied view is based on ROWID

Primary Key Materizlied View
-----------------------------
-It allow materizlied view master tables to be re-orgnized without affecting the eligiblity of the materilized view for fast refresh.
-Such materizlied view is based on the primary key of the master table instead of rowID.
-PRIMARY KEY is the default option
-To use the PRIMARY KEY clause, a PRIMARY KEY should be defined on the master table.
-*When materizlied view is created using the FAST options , a view log needs to be created on the master tables.

REFRESH options specifies
-the refresh method used by oracle to refresh data in materialized view
-Whether the view is primary key based or row-id based
-The time and interval at which view is to be refreshed.

SYSDATE+2
first copy of the materialized view is made of SYSDATE and the 
interval at which refresh has to be performed is every two days
this will indicate data will refresh every two days 

REFRESH METHOD
--------------
Fast Clause
	-The fast cluase refreshes by using the materizlied view logs to send the rows that have changed from master table to the materizlied view.
-for this clause, a materizlied view log need to be created for the master table.
*-it is not eligible for fast refresh if the defined subquery contains an analytic function

COMPLETE clause
	-it re-creates the entire materizlized view. Oracle performs a complete refresh even if a fast refresh is possible.

FORCE Clause
	-IT performs a fast refresh if one is possible or a complete refresh otherwise. if no refresh cluase is specified the FORCE clause if default

Refresh Timings
---------------
-the START WITH clause indicates when to perform the first replications from the master table to the local base table. it should evaluate to a future point in the time. the NEXT clause specifies the interval between refreshes

ROW ID Materizlized Views
=========================
-Row ID materizlied views should have a single master table and cannot contain any of the following
**Distinct or aggregate functions
**GROUP BY Subqueries , Joins and Set Operations
-the following statements creates the ROWID materizlzed view on table employees.


Subquery Materizlized Views
===========================




