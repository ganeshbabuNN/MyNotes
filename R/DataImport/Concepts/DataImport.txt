Data Input
==========
-Data anlayst task has to import the data into your tools,analyse the data and report on the results.
-R Provides a wide range of tools ,analyaise the data and report on the results.
-Refer R data import/export manual avaiable at https://cran.r-project.org/doc/manuals/R-data.pdf
-Refer Source of data import for R.png picture of R Sources available.R can be import in followings from keyboard, text files,MS excel,access,From popular statisical packages and variety of data management systems and from websites and online services.

Entering data from the keyboard
------------------------------
-Simpliest way to enter data is from the keyboard.
-In R they are two common methods, using the R built in text editor and embedding data directly in your code.
-Using R text edition is using edit() function.Steps involved are
	-Create an empty data frame(or matrix) with the variable names and modes youwant to have in the final dataset
	-invoke the text editor on this data objects, enter your data and save the results to the data objects. Clicking 	
	 on the column title gives the options of changing the variable name and type(numeric or character). still variable 	 	can be added by clicking the titles of unused columns. When text editor is closed the result are saved to the 	object assigned.
Usage
	mydata <- data.frame(variable=numeric(0),variable2=number(0))
	mydata <- edit(mydata) # edit functions operatores on a copy of the object.
-Still data can be emeded directly in your program. A character string is created containing a raw data and read.table() functions is used to process the string and return a data frame.

Refer Input Data via Keyboard.R for example

Data import from a delimited text file
--------------------------------------
-Data can be imported data from delimited file using read.table() functions that can read a file in a table format and save it as a data frame. 
-Each row of a table appears as online in the file.
usage
	mydataframe <- read.table(file,options)
where file is delimited ASCII file and options are parameter controlling how data is processed.

options		description
1)header	A logical value indicating whether the file contains the variable names in the first line
2)sep		The delimiter separating data values. The default is sep=" ", which denotes one or more spaces, tabs, new                    line or carriage returns.  to sep=","" for comman separated and sep="\t" to read tabe-delimited files
3)row.names	An optional parameter specifying one or more variables to represent row identifies
4)col.names	if the first row of file doesn't contain variable name(header=FALSE), you can use col.names to specify a 
		character vector containing the variable names.if header=FALSE and col.names options is omitted, variable                     will be named V1,V2 and so on.
5)na.strings	optional character vector indicating missing-value codes ex na.string=c("-9","?") converts each -9 and ?                     value to NA as the data is read.
6)colClasses	Optional vector of classes to be assign to the column . ex colClasses=c("numeric",                                 "numeric","character","NULL","numeric") 
7)quote		character(s) used to delimit strings that contain special character. By defaults this is either double (")                   or single (') quotes
8)skip		the number of lines in the data file to skip before begining to read the data. This options is useful for 		        skipping header comments in the file.
9)stringAsFactors a logical value indicating chacter variable should be converted to factors. the default is TRUE unless 		        this is overriddent by colClasses. When you're processing large text files,setting stringAsFactor=FALSE can 		        speed up processing
10)text		A character string specifying a text string to process. if text is psecified, leave file blank.


for on the arugments description refer help(read.table)?.

Refer Import Data from a Delimted text files.R for example

Data import via connections
---------------------------
-R has access several mechanism for accessing data via connecting as well.
-For Example, the funcitons file(), gzfile(), bzfile(), xzfile() , unz() and url() can be used in place of the filename
-The file() function allow you to access files, the clipboard and c-level standard input.
-the gzfile(),bzfile() , xzfile() and unz() functions text you read compressed files.
-the url() functions let you access internet files through complete URL that includes http://, ftp://. 

go through thelp(file) for details

Data import from Excel
----------------------
-R supports importing data from excel directly
-it is used by the xlsx package. before installing it need xlsxjars and rJava package with java installed
-the read.xlsx() functions imports worksheet into a data frame.
usage
	mydataframe <- read.xlsx(file,n)
where file is the path to an excel worbook.
and n is the number of worksheet to be imported.
-the above read.xlsx for reading less than 100,00 cells
-For more then 100,000+ cells uses xlsx2() functions.
-The other alternatives include the XLConnect and openxlsx packages. XLConnect depends on java but openxlsx doesn't. This is upto the developer to get the interface between R and Excel should check out one or more of these packages.

Refer Import Data from Excel.R for example

Data import from XML
-------------------
-Data is provided in the form of files encoded in XML.
-R has several packages for handling XML files
-One of the famous package written by Duncan Temple


Refer Import Data from XML.R for example

Data import from Web
--------------------
-Data can be obtained from web via webscraping or use of API.webscraping is used to extract the informations embedded in specific web pages, whereas API allows you to interact with web services and online data stores
-In General webscraping is used to extract data from web page and save it into an R structures for further analysis.
-For example the text on a webpages can be downloaded into an R character vector using the readlines() functions and manipulated with functions as grep() and gusb()
-For complex web pages, the RCurl and XML packages can be used to extract informations desired.
-For detailed example refer http://www.programmingr.com/content/webscraping-using-readlines-and-rcurl/.
-For twitter data via TwitterR, Facebook data via Rfacebook, Flickr data via RFlickr.
-For comprehensive list of R packages that can help you access web-based resources . Refer this https://cran.r-project.org/web/views/WebTechnologies.html.

Refer Import Data from Web.R for example

Importing data from SPSS
------------------------
-IBM SPSS datasets can be imported into via the read.spss() functions in the foreign package.
-read.get() functions in the Hmisc package.

Refer Import Data from SPSS.R for example

Importing data from SAS
-----------------------
-A number of functions in R are designed to import SAS datasets including read.ssd() in the foreign package.
-Use sas.get() in the Hmisc package if SAS software has been installed
-Use read.sas7bdat package if SAs software is not installed.

Refer Import Data from SAS.R for example

Importing data from Stata
-------------------------
-Importing data from stata to R is straight forward
- use read.dta() function from the foreign package.

Refer Import Data from Stata.R for example

Importing data from NetCF
-------------------------
-Data's network common data form(NetCDF) open source software contains machine-independent data formats for the creations and distribution of arry-oriented scientific data.
-NetCDF is commonly used to store geophysical data.
-The package ncdf and cdf4 packages provide high level R interface to netCDF data files and it provides support for data files created Unidata netCDF library and is available for windows.
-The ncdf4 package supports version 4 or earlier but
-the ncdf and ncdf4 package have recieved major recent upgrades and may operate differently the previous versions.

Refer Import Data from NetCDF.R for example

Import Data from NetCDF_NC
--------------------------
-Hiearchical data format(HDF5) is a software technology suite for the management of extremely for HDF5. The package is available on the bioconductor website rather than CRAN.

usage
	source("http://bioconductor.org/bioLite.R")
	bioLite("rhdf5")
-Visit www.hdfgroup.org.
-there is an excellent tutorial for rhdf5 package by bernd Fischer at htpp://mng.bz/eg6j

Refer Import Data from HDF5.R for example

Importing data managment systems (DBMS)
---------------------------------------
-R can interfaced with a wide variety of relational DBMS includingMS SQL Server, MS Access, MySQL, Oracle, PostgresQL, DB2, 	sybase ,Teradat and SQL lite.
-Some packages provides access through native DB Drivers, whereas other offer access via ODBC or JDBC

The ODBC Interface
------------------
-Popular method of accessing a DBMS in R is through the RODBC package which allow R to connect to any DBMS that has an ODBC Driver.
-The RODBC package is supported and this allows two-way communication R and an ODBC-Connected SQl DB.

Refer Import Data from Database via ODBC.R for example


The DBI-related Interface
-------------------------
-the DBI package provides a general and consistent client-side interface to a DBMS.
-building the framework , the RJDBC package provides access to DBMS via a JDBC driver.
-Other useful based packages include RMySQL,ROracle,RPostreSQL and RSQLite.


Refer Import Data from Database via JDBC.R for example


Importing data via Stat/Transfer
--------------------------------
-This is a commerical product that can make the task significantly easier. 
-It is a standalone application that can transfer data among 34 data formats including R.




