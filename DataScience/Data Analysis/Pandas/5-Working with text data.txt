Intro to the Working with Text Data Section
Common String Methods - lower, upper, title, and len
Use the str.replace method to replace all occurrences of character with another
Filter a DataFrame's Rows with String Methods
More DataFrame String Methods - strip, lstrip, and rstrip
Invoke String Methods on DataFrame Index and Columns
Split Strings by Characters with the str.split Method
More Practice with the str.split method on a Series
Exploring the expand and n Parameters of the str.split Method

Intro to the Working with Text Data Section
===========================================
chicago=pd.read_csv("chicago.csv")
chicago.head()

chicago.info()

#Tune the memory
chicago.nunique()
chicago['Position Title'].value_counts()

chicago['Department'].unique()
chicago['Department']=chicago['Department'].astype("category")

Common String Methods - lower, upper, title, and len
====================================================
chicago=pd.read_csv("chicago.csv")
chicago.head()

chicago=pd.read_csv("chicago.csv")
chicago['Department']=chicago['Department'].astype("category")
chicago.head()

Use the str.replace method to replace all occurrences of character with another
===============================================================================
chicago=pd.read_csv("chicago.csv")
chicago.head()

%%time
#using the str to access those methods
chicago['Name'].str.lower()
chicago["Name"].str.upper()
chicago['Name'].str.title()
#if you update in the dataframe 
chicago['Name']=chicago['Name'].str.lower()
chicago["Position Title"]=chicago["Position Title"].str.upper()
chicago['Department']=chicago['Department'].str.title()
chicago['Department'].str.len() #length of the string

Filter a DataFrame's Rows with String Methods
=============================================
chicago=pd.read_csv("chicago.csv")
chicago.head()

#Traditional methods
"Hello World".replace("l","!")
chicago["Department"]=chicago["Department"].str.replace("MGMNT","Management")
chicago
chicago["Employee Annual Salary"]=chicago["Employee Annual Salary"].str.replace("$","").astype(float)
chicago["Employee Annual Salary"].nlargest(3)
chicago["Employee Annual Salary"].nsmallest(3)


chicago=pd.read_csv("chicago.csv").dropna(how="all")
chicago.head()

mask=chicago['Position Title'].str.lower().str.contains("water")
chicago[mask]

chicago[chicago['Position Title'].str.lower().str.startswith("water")]
chicago[chicago["Position Title"].str.lower().str.endswith("ist")]

More DataFrame String Methods - strip, lstrip, and rstrip
=========================================================

#Classical method
"  Hello World ".lstrip()
"  Hello World ".rstrip()
"  Hello World ".strip()

chicago["Name"]=chicago["Name"].str.rstrip().str.lstrip()
chicago["Position Title"]=chicago["Position Title"].str.strip()

Invoke String Methods on DataFrame Index and Columns
====================================================
chicago=pd.read_csv("chicago.csv",index_col="Name").dropna(how="all")
chicago["Department"]=chicago["Department"].astype("category")
chicago.head()

chicago.index=chicago.index.str.strip().str.title()
chicago.head(3)

chicago.columns.str.upper()
chicago.columns=chicago.columns.str.upper()
chicago.head(3)

Split Strings by Characters with the str.split Method
=====================================================

More Practice with the str.split method on a Series
Exploring the expand and n Parameters of the str.split method.

chicago=pd.read_csv("chicago.csv").dropna(how="all")
chicago["Department"]=chicago["Department"].astype("category")
chicago.hea

"Hello my name is ganesh".split(" ")
chicago["Name"].str.split(",").str.get(0).str.title().value_counts()
chicago['Position Title'].str.split(" ").str.get(0).str.title().value_counts()


More Practice with the str.split method on a Series
===================================================
chicago['Name'].str.split(",").str.get(0).value_counts().head(3)
chicago['Name'].str.split(',').str.get(1).str.strip().str.split(" ").str.get(0).value_counts().head()

Exploring the expand and n Parameters of the str.split Method
=============================================================

#expand parameter for splitting the value
chicago["Name"].str.split(",",expand=True)

#to save the value unpacking 
chicago[["First Name","Last Name"]]=chicago["Name"].str.split(",",expand=True)
chicago.head()

#Using n parameter to restrict the column based on column index
chicago["Position Title"].str.split(" ",expand=True,n=1)
#store the column index into the new column
chicago[["First title world","Remaining Title world"]]=chicago["Position Title"].str.split(" ",expand=True,n=1)

Quiz
====

Assignment
==========


Resources:
=========
https://pandas.pydata.org/docs/user_guide/text.html